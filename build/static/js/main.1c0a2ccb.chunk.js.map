{"version":3,"sources":["pages/Beforelogin.js","pages/Login.js","pages/Register.js","pages/RenewProfile.js","pages/HomePage.js","Components/URLModal.js","pages/DiscussionSet.js","Components/DiscussionContent.js","Components/VotedTime.js","Components/SelectedTime.js","Components/NotSelectedTime.js","Components/DiscussionTime.js","Components/VotedPlace.js","Components/SelectedPlace.js","Components/NotSelectedPlace.js","Components/PlaceModal.js","Components/DiscussionPlace.js","pages/DiscussionPage.js","Components/ChatRoom.js","pages/GroupPage.js","useData.js","App.js","reportWebVitals.js","index.js"],"names":["Header","Layout","Content","Login","history","useHistory","Fragment","style","backgroundColor","marginLeft","fontSize","color","className","onClick","push","Footer","sendData","mess","useEffect","api","data","status","UID","setUID","notification","message","description","duration","postdata","Object","password","email","console","log","path","pathname","state","useState","setEmail","setPassword","setClick","validemail","placeholder","onChange","event","target","value","Password","length","test","useCallback","Register","UName","setUName","pass2","setPass2","isregistersuccess","setIsregistersuccess","condition","float","marginTop","RegisterSuccess","useLocation","newUName","newpassword","click","setTimeout","goBack","Sider","SubMenu","Menu","HomePage","collapsed","setCollapsed","group","recent","voting","GID","setGID","iscreateclicked","setIscreateclicked","isjoinclicked","setIsjoinclicked","code","setCode","GName","setGName","file","setFile","setClick_join","isgearclicked","setIsgearclicked","handlegear","minHeight","collapsible","onCollapse","theme","defaultSelectedKeys","mode","Item","icon","UserOutlined","title","height","FormOutlined","path_renew","LogoutOutlined","RollbackOutlined","PlusOutlined","UsergroupAddOutlined","TeamOutlined","map","g","index","e","handleGroupClick","margin","admin","marginRight","textAlign","prefix","paddingLeft","ChatModal","visible","onCreate","onCancel","Form","useForm","form","okText","cancelText","onOk","validateFields","then","values","resetFields","catch","error","window","alert","layout","name","label","rules","required","formItemLayoutWithOutLabel","wrapperCol","xs","span","offset","sm","RangePicker","DatePicker","DiscussionSet","rangeConfig","displayStatus","subject","setSubject","content","setContent","timeStart","setTimeStart","timeEnd","setTimeEnd","timeSpan","setTimeSpan","deadline","setDeadline","place","setPlace","disabledDate","current","moment","startOf","autoComplete","labelCol","TextArea","type","showTime","format","minuteStep","dateString","tz","Group","defaultValue","Button","htmlType","Error","msg","time_start","time_end","time_span","DiscussionContent","orientation","plain","VotedTime","time_options","show_options","setShowOptions","options","keys","newShowOptions","indexOf","SelectedTime","time_result","newMax","cnt","formated","option","NotSelectedTime","DID","isAdmin","setTimeResult","max","setMax","time","disabled","DiscussionTime","voted","isDue","isSelect","useParams","checkList","setCheckList","setOptions","newOptions","handleVote","times","newCheckList","checked","filter","item","handleCheck","place_options","SelectedPlace","place_result","NotSelectedPlace","setPlaceResult","PlaceModal","DiscussionPlace","modalVisible","setModalVisible","VotedPlace","width","list","addPlace","places","DiscussionPage","DName","time_voted","place_voted","isSelectTime","isSelectPlace","activeKey","setActiveKey","location","BookOutlined","key","FieldTimeOutlined","HomeOutlined","padding","ChatRoom","messages","messageInput","setMessageInput","endMsg","useRef","scrollIntoView","behavior","undefined","sender","body","id","display","justifyContent","ref","fontStyle","Search","enterButton","onSearch","handleMessage","GroupPage","discussions","WechatOutlined","FileOutlined","open","url","renewURL","SmileOutlined","d","handleBack","client","WebSocket","useData","setIsAdmin","discuss_content","setDiscussContent","setDiscussions","setTimeOptions","setPlaceOptions","setIsDue","setTimeVoted","setPlaceVoted","setIsSelectPlace","setIsSelectTime","error_msg","setMess","setMessages","onopen","onmessage","byteString","JSON","parse","newMessages","a","waitForOpenSocket","send","stringify","Promise","resolve","reject","currentAttempt","interval","setInterval","maxNumberOfAttempts","clearInterval","readyState","OPEN","App","payload","success","exact","component","Beforelogin","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1c0a2ccb.chunk.js","sourcesContent":["\r\nimport React from 'react'\r\nimport 'antd/dist/antd.css';\r\nimport '../style/Beforelogin.css'\r\nimport {Button, Layout} from 'antd';\r\nimport {useHistory} from \"react-router-dom\";\r\nconst { Header, Content } = Layout;\r\nconst Login = () =>{\r\n  const history = useHistory();\r\n  return( \r\n    <React.Fragment>\r\n    \r\n    <Layout>\r\n      <Header style={{backgroundColor:\"white\"}}>\r\n          <div style={{marginLeft:\"-2vw\", fontSize:\"3vw\", color:\"#000099\"}}>\r\n            TEAMEET\r\n          </div>\r\n      </Header>\r\n\r\n      <Content style={{backgroundColor:\"white\"}}>\r\n      <div className=\"beforelogin_account-welcome\">\r\n              Welcome to TEAMEET!\r\n      </div>\r\n      <div className=\"beforelogin_login\">\r\n        <Button\r\n            className=\"beforelogin_login-button\"\r\n            onClick = {()=>{history.push(\"/login\")}}>\r\n          點此進入\r\n        </Button>\r\n      </div>\r\n      </Content>\r\n\r\n    </Layout>\r\n\r\n\r\n      \r\n\r\n    </React.Fragment>\r\n    \r\n\r\n\r\n  );\r\n}\r\n\r\n\r\nexport default Login;\r\n","import React, { useCallback, useState, useEffect } from 'react'\r\nimport 'antd/dist/antd.css';\r\nimport '../style/Login.css'\r\nimport {Button, Input, Layout, notification} from 'antd';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport { SettingOutlined } from '@ant-design/icons';\r\nconst { Header, Footer, Content } = Layout;\r\nconst Login = ({sendData, mess}) =>{\r\n  useEffect(()=>{\r\n\r\n    if(mess.api === \"login\"){\r\n      if(mess.data.status === true){\r\n        var data ={UID: mess.data.UID}\r\n        sendData('index', data);\r\n        setUID(mess.data.UID)\r\n      }else if(mess.data.status === false){\r\n        notification['error']({\r\n          message: '錯誤',\r\n          description:\r\n          '使用者錯誤 或是 密碼錯誤，請確認是否已經註冊！',\r\n          duration: 3,\r\n        });\r\n      }else{\r\n        notification['error']({\r\n          message: '錯誤',\r\n          description:\r\n            '請稍後再試一次',\r\n          });\r\n      }\r\n    }else if(mess.api === \"index\"){\r\n      var postdata = new Object();\r\n      postdata.UID = UID;\r\n      postdata.password = password;\r\n      postdata.email=email;\r\n\r\n      var data = mess.data;\r\n      data.postdata = postdata;\r\n      console.log(\"data in index push\", data)\r\n        var path = {\r\n          pathname:\"/index\",\r\n          state:{data},\r\n        }\r\n        history.push(path);\r\n    }\r\n  },[mess]);\r\n  \r\n  const history = useHistory();\r\n  const [UID, setUID] = useState(\"\");\r\n  const [email, setEmail] = useState(\"winniew0824@gmail.com\");\r\n  const [password, setPassword] = useState(\"123\");\r\n  const [click, setClick] = useState(false);\r\n  const validemail= /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/; \r\n\r\n  const handlelogin = () =>{\r\n    if(email.length===0){\r\n        notification['error']({\r\n          message: '錯誤',\r\n          description:\r\n            '請輸入你的帳號(不可為空)',\r\n        });\r\n    }else if(password.length===0){\r\n      notification['error']({\r\n        message: '錯誤',\r\n        description:\r\n          '請輸入你的密碼(不可為空)',\r\n      });\r\n    }else if(!validemail.test(email)){\r\n      notification['error']({\r\n        message: '錯誤',\r\n        description:\r\n          '帳號須為合理mail',\r\n      });\r\n    }else{\r\n      var data = {email:email, password:password};\r\n      sendData('login', data)\r\n      console.log(\"login.js in frontend send:\", data)\r\n      setClick(true);\r\n    }\r\n  }    \r\n  \r\n  return( \r\n    <React.Fragment>\r\n    \r\n    <Layout>\r\n      <Header style={{backgroundColor:\"white\"}}>\r\n          <div style={{marginLeft:\"-2vw\", fontSize:\"3vw\", color:\"#000099\"}}>\r\n            TEAMEET\r\n          </div>\r\n      </Header>\r\n\r\n      <Content style={{backgroundColor:\"white\"}}>\r\n      <div className=\"login_account-welcome\">\r\n              Welcome to TEAMEET!\r\n      </div>\r\n      <div className=\"login_account\" >\r\n          <div className=\"login_account-title\" > 帳號: </div>\r\n          <div className=\"login_account-input\" >\r\n              <Input \r\n              className=\"login_searchbox\"\r\n              placeholder=\"                                                @gmail.com\"\r\n              onChange={(event)=>setEmail(()=>event.target.value)}\r\n              value={email}\r\n            />\r\n          </div>\r\n      </div>\r\n            \r\n      <div className=\"login_password\" >\r\n        <div className=\"login_password-title\" >密碼: </div>\r\n        <div className=\"login_password-input\" >\r\n            <Input.Password \r\n                  className=\"login_searchbox\"\r\n                  onChange={(event)=>setPassword(()=>event.target.value)} \r\n                  value={password} />\r\n        </div>\r\n      </div>\r\n    \r\n      <div className=\"login_login\">\r\n        <Button\r\n            className=\"login_login-button\"\r\n            onClick = {handlelogin}>\r\n          登入\r\n        </Button>\r\n      </div>\r\n      </Content>\r\n\r\n      <Footer style={{backgroundColor:\"white\"}}>\r\n      <div className=\"login_bottom-register\">\r\n        <Button\r\n            className= \"login_bottom-register-button\"\r\n            onClick = {useCallback(()=>history.push('/register'), [history])}>\r\n          還沒有帳號？點此註冊\r\n        </Button>\r\n      </div>\r\n      </Footer>\r\n    </Layout>\r\n\r\n\r\n      \r\n\r\n    </React.Fragment>\r\n    \r\n\r\n\r\n  );\r\n}\r\n\r\n\r\nexport default Login;\r\n","\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Button, notification, Input, Layout } from 'antd';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { If, Then, Else } from 'react-if-elseif-else-render';\r\nimport 'antd/dist/antd.css';\r\nimport '../style/Register.css'\r\nconst { Header, Content } = Layout;\r\nconst Register = ({sendData, message}) =>{\r\n  const history = useHistory();\r\n  const [UName, setUName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [pass2, setPass2] = useState(\"\");\r\n  const [isregistersuccess,setIsregistersuccess] = useState(false);\r\n  const validemail= /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/; \r\n\r\n  useEffect(()=>{\r\n    if(message.api === \"register\"){\r\n    if(message.data.status === true){\r\n      setIsregistersuccess(true);\r\n    }else if(message.data.status === false){\r\n      notification['error']({\r\n      message: '錯誤',\r\n      description:\r\n        '這個信箱已經註冊過了',\r\n      });\r\n    }else{\r\n      notification['error']({\r\n        message: '錯誤',\r\n        description:\r\n          '請稍後再試一次',\r\n        });\r\n    }\r\n  } \r\n},[message]);\r\n \r\n  const handleregister = ()=>{\r\n        if(email.length===0){\r\n          notification['error']({\r\n            message: '錯誤',\r\n            description:\r\n              '請輸入你的帳號(不可為空)',\r\n          });\r\n        }else if(UName.length===0){\r\n          notification['error']({\r\n            message: '錯誤',\r\n            description:\r\n              '請輸入你的暱稱(不可為空)',\r\n          });\r\n        }else if(password.length===0){\r\n          notification['error']({\r\n            message: '錯誤',\r\n            description:\r\n              '請輸入你的密碼(不可為空)',\r\n          });\r\n        }else if(pass2.length===0){\r\n          notification['error']({\r\n            message: '錯誤',\r\n            description:\r\n              '請再次輸入你的密碼(不可為空)',\r\n          });\r\n        }else if(password !== pass2){\r\n          notification['error']({\r\n            message: '錯誤',\r\n            description:\r\n              '密碼不一致，請重新輸入',\r\n          });\r\n          setPassword('');\r\n          setPass2('');\r\n        }else if(!validemail.test(email)){\r\n          notification['error']({\r\n            message: '錯誤',\r\n            description:\r\n              '帳號須為合理mail'});\r\n        }else{\r\n          var data = {email:email, UName: UName, password:password};\r\n          sendData('register', data);\r\n          console.log(\"register.js in frontend send:\", data);\r\n          }\r\n\r\n      };\r\n  return( \r\n    <React.Fragment>\r\n    <Layout>\r\n      <If condition={isregistersuccess}>\r\n        <Then>\r\n          <Header style={{backgroundColor:\"white\"}}>\r\n            <div style={{float:\"left\",marginLeft:\"-2vw\", fontSize:\"3vw\", color:\"#000099\"}}>\r\n              TEAMEET\r\n            </div>\r\n            <span style = {{float:\"left\", fontSize:\"2vw\", marginTop:\"0.3vw\", marginLeft:\"0.8vw\"}}>\r\n              註冊成功\r\n            </span>\r\n\r\n          </Header>\r\n\r\n          <Content style={{backgroundColor:\"white\"}}>\r\n          <div className=\"registersuccess_txt\">\r\n            Hi! {UName} 謝謝你決定加入 TEAMEET，\r\n          </div>\r\n          <div className=\"registersuccess_midtxt\">\r\n            希望你可以在這裡有良好的體驗，\r\n          </div>\r\n          <div className=\"registersuccess_midtxt\">\r\n            有甚麼想說的也歡迎回饋給我們。\r\n          </div>\r\n          <div className=\"registersuccess_nametxt\">\r\n          -- TEAMEET  團隊\r\n          </div>\r\n        \r\n          <div className=\"registersuccess_login\">\r\n            <Button\r\n                className=\"registersuccess_login-button\"\r\n                onClick = {()=>{history.push(\"/login\")}}>\r\n              點此登入\r\n            </Button>\r\n          </div>\r\n          </Content>\r\n        </Then>\r\n        <Else>\r\n          <Header style={{backgroundColor:\"white\"}}>\r\n              <div style={{marginLeft:\"-2vw\", fontSize:\"3vw\", color:\"#000099\"}}>\r\n                TEAMEET\r\n              </div>\r\n              <span style = {{float:\"left\", fontSize:\"2vw\", marginTop:\"0.3vw\", marginLeft:\"0.8vw\"}}>\r\n                註冊\r\n              </span>\r\n          </Header>\r\n\r\n          <Content style={{backgroundColor:\"white\"}}>\r\n            <div className=\"register_account\">\r\n                <div className=\"register_account-title\">帳號: </div>\r\n                <div className=\"register_account-input\">\r\n                <Input \r\n                className=\"register_searchbox\"\r\n                placeholder=\"                                                @gmail.com\"\r\n                onChange={(event)=>setEmail(()=>event.target.value)}\r\n                value={email}/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"register_name\">\r\n                <div className=\"register_mid-title\">暱稱: </div>\r\n                <div className=\"register_mid-input\">\r\n                <Input \r\n                className=\"register_searchbox\"\r\n                onChange={(event)=>setUName(()=>event.target.value)}\r\n                value={UName}/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"register_mid\">\r\n                <div className=\"register_mid-title\">密碼: </div>\r\n                <div className=\"register_mid-input\">\r\n                    <Input.Password \r\n                    className=\"register_searchbox\"\r\n                    onChange={(event)=>setPassword(()=>event.target.value)} \r\n                    value={password} />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"register_pass\">\r\n                <div className=\"register_pass-title\">再次輸入密碼: </div>\r\n                <div className=\"register_pass-input\">\r\n                <Input.Password \r\n                    className=\"register_searchbox\"\r\n                    onChange={(event)=>setPass2(()=>event.target.value)} \r\n                    value={pass2} />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"register_button\">\r\n            <Button \r\n                className=\"register_button-button\"\r\n                onClick = {handleregister}>\r\n                註冊\r\n            </Button>\r\n            </div>\r\n          </Content>\r\n        </Else>\r\n      </If>\r\n      \r\n    </Layout>\r\n    </React.Fragment>\r\n    \r\n\r\n\r\n  );\r\n}\r\n\r\n\r\nexport default Register;\r\n","import React, { useEffect, useState } from 'react'\r\nimport 'antd/dist/antd.css';\r\nimport '../style/RenewProfile.css'\r\nimport {Button, Input, Layout, notification} from 'antd';\r\nimport {useHistory, useLocation} from \"react-router-dom\";\r\nconst { Header, Content } = Layout;\r\nconst RegisterSuccess = ({sendData, message}) =>{\r\n  const location = useLocation();\r\n  var data = location.state.data;\r\n  var {UID, UName, password, email} = data;\r\n\r\n  const history = useHistory();\r\n  const [newUName, setUName] = useState(UName);\r\n  const [newpassword, setPassword] = useState(password);\r\n  const [click, setClick] = useState(false);\r\n  useEffect(()=>{\r\n    if(click === true){\r\n      if(message.data.status === true){\r\n        console.log(\"tureeeeeeeeee\")\r\n      notification['success']({\r\n        message: '更新成功',\r\n        description:\r\n        '已更新您的個人資料, 即將跳轉回去',\r\n      });\r\n      setTimeout(history.goBack(), 2000 )\r\n      setClick(false);\r\n    }else{\r\n      notification['error']({\r\n        message: '更新失敗',\r\n        description:\r\n        '伺服器出錯了, 麻煩你再嘗試一次',\r\n      });\r\n      setClick(false);\r\n    }}\r\n  },[message]);\r\n\r\n  const handlerenew = () =>{\r\n\r\n    var data = {UID:UID, UName:newUName, password:newpassword};\r\n    sendData('renewProfile', data);\r\n    setClick(true);\r\n  }\r\n  return( \r\n    <React.Fragment>\r\n    \r\n    <Layout>\r\n      <Header style={{backgroundColor:\"white\"}}>\r\n          <div style={{float:\"left\",marginLeft:\"-2vw\", fontSize:\"3vw\", color:\"#000099\"}}>\r\n            TEAMEET\r\n          </div>\r\n          <span style = {{float:\"left\", fontSize:\"2vw\", marginTop:\"0.3vw\", marginLeft:\"0.8vw\"}}>\r\n            更新個人資料\r\n          </span>\r\n\r\n        </Header>\r\n\r\n      <Content style={{backgroundColor:\"white\"}}>\r\n      <div className=\"renew_account\">\r\n            <div className=\"renew_account-title\">帳號: </div>\r\n            <div className=\"renew_account-txt\">{email}</div>\r\n        </div>\r\n\r\n        <div className=\"renew_name\">\r\n            <div className=\"renew_mid-title\">暱稱: </div>\r\n            <div className=\"renew_mid-input\">\r\n            <Input \r\n            className=\"renew_searchbox\"\r\n            onChange={(event)=>setUName(()=>event.target.value)}\r\n            placeholder={UName}/>\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"renew_mid\">\r\n            <div className=\"renew_mid-title\">密碼: </div>\r\n            <div className=\"renew_mid-input\">\r\n                <Input.Password \r\n                className=\"renew_searchbox\"\r\n                onChange={(event)=>setPassword(()=>event.target.value)} \r\n                placeholder={password} />\r\n            </div>\r\n        </div>\r\n\r\n\r\n\r\n        <div className=\"renew_button\">\r\n        <Button \r\n            className=\"renew_button-button\"\r\n            onClick = {handlerenew}>\r\n            確認\r\n        </Button>\r\n        </div>\r\n      </Content>\r\n    </Layout>\r\n\r\n      \r\n\r\n    </React.Fragment>\r\n    \r\n\r\n\r\n  );}\r\nexport default RegisterSuccess;\r\n","import { useEffect, useState } from 'react'\r\nimport {Button,Layout, Menu, Breadcrumb,Input, notification } from 'antd';\r\nimport {\r\n  TeamOutlined,\r\n  UserOutlined,\r\n  LogoutOutlined,\r\n  FormOutlined,\r\n  PlusOutlined,\r\n  UsergroupAddOutlined,\r\n  RollbackOutlined,\r\n} from '@ant-design/icons';\r\nimport '../style/Index.css';\r\nimport { useParams, useHistory, useLocation } from \"react-router-dom\";\r\nimport  {BsGear}  from \"react-icons/bs\";\r\nimport VotingGroups from \"../Components/VotingGroups\";\r\nimport { If, Then, ElseIf, Else } from 'react-if-elseif-else-render';\r\nimport RecentGroups from \"../Components/RecentGroups\";\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\n\r\nconst HomePage = ({sendData, mess}) =>{\r\n\r\n    const [collapsed, setCollapsed] = useState(false)\r\n    const [activeKey, setActiveKey] = useState(\"\")\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    var data = location.state.data;\r\n    // console.log(\"data in homepage\", location.state)\r\n    var {UName, postdata, group, recent, voting, email, password} = data;\r\n    var {UID, password, email} = postdata;\r\n    // console.log(\"indexxx\",data)\r\n    const [GID, setGID] = useState(\"\");\r\n    const onCollapse = collapsed => {\r\n        console.log(collapsed);\r\n        setCollapsed(collapsed);\r\n    };\r\n\r\n    const [iscreateclicked, setIscreateclicked] = useState(false);\r\n    const [isjoinclicked, setIsjoinclicked] = useState(false);\r\n  \r\n    const [code, setCode]=useState(\"\");\r\n    const [GName, setGName]=useState(\"\");\r\n    const [file, setFile]=useState(\"\");\r\n    const [click_join, setClick_join]=useState(false);\r\n    const [click_create, setClick_create]=useState(false);\r\n\r\n    // initialize\r\n    // useEffect(()=>{\r\n    //   let data = {UID}\r\n    //   sendData(\"index\", data)\r\n    // }, [])\r\n    const handleback = () =>{\r\n      setIscreateclicked(false);\r\n      setIsjoinclicked(false);\r\n    };\r\n    \r\n    const handlecreategroup = () =>{\r\n      setIscreateclicked(true);\r\n      setIsjoinclicked(false);  \r\n    }\r\n    const handlecreate = () =>{\r\n      var data = {admin:UID, GName, file:file};\r\n      sendData('createGroup', data);\r\n    }\r\n    const handlejoingroup = () =>{\r\n      setIscreateclicked(false);\r\n      setIsjoinclicked(true);\r\n    }\r\n    const handlejoin = () =>{\r\n      if(code === \"\"){\r\n        notification['error']({\r\n          message: '錯誤',\r\n          description:\r\n            'code不可為空',\r\n          });\r\n          return\r\n      }\r\n      var data = {UID:UID, code:'#'+code};\r\n      sendData('joinGroup', data);\r\n      setClick_join(true);  \r\n    }\r\n  \r\n    const handlerenew = () => {\r\n      var data = {UID, UName, password, email};\r\n      var path_renew = {\r\n                    pathname:\"/renewProfile\",\r\n                    state:{data}};\r\n      history.push(path_renew)\r\n    }\r\n    const [isgearclicked, setIsgearclicked] = useState(false);\r\n    const handlegear = () =>{\r\n      setIsgearclicked(!isgearclicked);\r\n    };\r\n\r\n    //history.push({pathname:`/${UID}/${GID}`, state:{UName, password, email}});\r\n    const handleGroupClick = (GID) =>{\r\n      let data = {UID, GID}\r\n      setGID(GID);\r\n      sendData(\"group\", data)\r\n\r\n    }\r\n\r\n    useEffect(()=>{\r\n      if(mess.api === \"index\"){\r\n          console.log(\"index\", mess)\r\n        // console.log(\"error_msg\", message.error_msg)\r\n        // var error_msg = message.error_msg;\r\n        // if(error_msg === \"The user has been in the group!\" ){\r\n        //   notification['error']({\r\n        //     message: '錯誤',\r\n        //     description:\r\n        //       '你已經在該群組內',\r\n        //     });\r\n        //     setClick_join(false);\r\n        // }else if(error_msg === \"The code is not valid!\"){\r\n        //   notification['error']({\r\n        //     message: '錯誤',\r\n        //     description:\r\n        //       '請再確認一次 code 是否正確',\r\n        //     });\r\n        //     setClick_join(false);\r\n        //   }\r\n        // else if(error_msg === \"Successed!\"){\r\n        //   notification['success']({\r\n        //     message: '成功',\r\n        //     description:\r\n        //     '成功加入該群組, 為你跳轉頁面',\r\n        //   });\r\n          // var path_group = {\r\n          //   pathname:`/${UID}/${GID}`,\r\n          //   state:{UName},\r\n          // }\r\n          // setTimeout(history.push(path_group), 2000 )\r\n        \r\n     }\r\n    // else if(click_create === true){\r\n    //   if(message.status === false){\r\n    //         notification['error']({\r\n    //           message: '錯誤',\r\n    //           description:\r\n    //           '請稍後再重新登入一次, 並請你確認你的網路連接正常',\r\n    //         });\r\n    //         setClick_create(false);\r\n    //       }else if(message.status === true){\r\n    //         notification['success']({\r\n    //           message: '成功',\r\n    //           description:\r\n    //           '創建成功, 為你跳轉至群組畫面',\r\n    //         });\r\n    //         setGID(message.GID);\r\n    //         setGName(message.GName);\r\n    //         var path_creategroup = {\r\n    //           pathname:`/${UID}/${GID}`,\r\n    //           state:{UName},\r\n    //         }\r\n    //         // setTimeout(history.push(path_creategroup), 2000 )\r\n    //         setClick_create(false);\r\n\r\n    else if(mess.api === 'group'){\r\n      // var GID = GID;\r\n      // console.log(\"GID\", {GID})\r\n      var data = mess.data;\r\n      data.UName = UName\r\n      data.postdata = {UName, postdata, group, recent, voting, email, password};\r\n      // console.log(data)\r\n      console.log(\"data in hp push\", data)\r\n        var path = {\r\n          pathname:`/${UID}/${GID}`,\r\n          state:{data},\r\n        }\r\n        // history.push(path);\r\n        history.push(path);\r\n    }\r\n    },[mess])\r\n\r\n    return(\r\n        <Layout style={{ minHeight: '100vh' }}>\r\n          <Sider collapsible collapsed={collapsed} onCollapse={onCollapse}>\r\n            <div className=\"logo\" />\r\n            <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\">\r\n              <Menu.Item key=\"1\" icon={<UserOutlined />} title=\"User\" style={{height: \"60px\"}} >\r\n                <div onClick={handleback} style={{float:\"left\"}}>{UName}</div>\r\n                <BsGear className=\"index_gear\" onClick={handlegear} style={{fontSize:\"1.5vw\",marginTop:\"0.5vw\"}}/>\r\n              </Menu.Item>\r\n              {isgearclicked?(<>\r\n                <Menu.Item key=\"RenewProfile\" icon={<FormOutlined />} title=\"RenewProdile\" onClick={handlerenew}>\r\n                    更新個人資料\r\n                </Menu.Item>\r\n                <Menu.Item key=\"logout\" icon={<LogoutOutlined />} title=\"Logout\" onClick={()=>{history.push('/')}}>\r\n                    登出\r\n                </Menu.Item>\r\n                <Menu.Item key=\"Back\" icon={<RollbackOutlined />} title=\"回上一頁\" onClick={handlegear}>\r\n                    回上一頁\r\n                </Menu.Item>\r\n                </>\r\n                ):(\r\n                <>\r\n                <Menu.Item key=\"create\" icon={<PlusOutlined />} title=\"創建群組\"  onClick={handlecreategroup}>\r\n                    創建群組\r\n                </Menu.Item>\r\n\r\n                <Menu.Item key=\"join\" icon={<UsergroupAddOutlined />} title=\"加入群組\"  onClick={handlejoingroup}>\r\n                    加入群組\r\n                </Menu.Item>\r\n                <SubMenu key=\"sub2\" icon={<TeamOutlined />} title=\"群組\">\r\n                  {group.map((g, index)=>{return(\r\n                          <Menu.Item key={`group_${g.GID}`} \r\n                                     onClick={(e)=>{handleGroupClick(g.GID)}}>{g.GName}\r\n                          </Menu.Item>)\r\n                        })}\r\n                </SubMenu>\r\n                </>\r\n              )}\r\n              \r\n            </Menu>\r\n          </Sider>\r\n          <Layout className=\"site-layout\">\r\n            {/* <Header className=\"site-layout-background\" style={{ padding: 0 }} /> */}\r\n            <Content style={{ margin: '0 16px' }}>\r\n              <Breadcrumb style={{ margin: '16px 0' }}>\r\n                <Breadcrumb.Item>使用者</Breadcrumb.Item>\r\n                <Breadcrumb.Item>{UName}</Breadcrumb.Item>\r\n              </Breadcrumb>\r\n              <If condition={iscreateclicked}>\r\n        <Then>\r\n        <Content>\r\n          <div style={{fontSize:\"2vw\", marginLeft:\"2vw\", height:\"30vw\"}}>\r\n              創建群組\r\n          </div>\r\n        \r\n        {/* <Content style={{paddingLeft:\"1.2vw\",backgroundColor:\"white\"}} > */}\r\n        <div className=\"create_GName\" >\r\n          <div className=\"create_GName-title\" > 群組名稱: </div>\r\n          <div className=\"create_GName-input\" >\r\n              <Input \r\n              className=\"create_searchbox\"\r\n              placeholder=\"請輸入 群組名稱\"\r\n              onChange={(event)=>setGName(()=>event.target.value)}\r\n              value={GName}\r\n            />\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"create_datalink\" >\r\n          <div className=\"create_datalink-title\" > 資料集連結: </div>\r\n          <div className=\"create_datalink-input\" >\r\n              <Input \r\n              className=\"create_searchbox\"\r\n              placeholder=\"請輸入 資料集連結\"\r\n              onChange={(event)=>setFile(()=>event.target.value)}\r\n              value={file}\r\n            />\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"create_create\">\r\n        <Button\r\n            className=\"create_create-button\"\r\n            onClick = {handlecreate}>\r\n          創建\r\n        </Button>\r\n         </div>\r\n          </Content>\r\n        </Then>\r\n         {/* click joinGroup */}\r\n        <ElseIf condition={isjoinclicked}>\r\n        <Content >\r\n            <div style={{fontSize:\"2vw\", marginLeft:\"2vw\"}}>\r\n                加入群組\r\n            </div>\r\n\r\n        \r\n        <div style={{marginTop:\"4vw\"}} >\r\n          <div style={{marginLeft:\"25vw\",height:\"4.2vw\",marginRight:\"0.5vw\",float:\"left\", textAlign:\"left\",fontSize:\"2vw\"}} > code: </div>\r\n          <div className=\"create_GName-input\" >\r\n              <Input \r\n              prefix=\"#\"\r\n              className=\"create_searchbox\"\r\n              placeholder=\"請輸入 code\"\r\n              onChange={(event)=>setCode(()=>event.target.value)}\r\n              value={code}\r\n            />\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"create_create\">\r\n        <Button\r\n            className=\"create_create-button\"\r\n            onClick = {handlejoin}>\r\n          加入\r\n        </Button>\r\n         </div>\r\n          </Content>\r\n        </ElseIf>\r\n         {/* index */}\r\n        <Else>\r\n        <Header style={{backgroundColor:\"white\"}}>\r\n            <div style={{fontSize:\"2vw\", marginLeft:\"-2vw\"}}>\r\n                近期討論\r\n            </div>\r\n        </Header>\r\n        <Content style={{paddingLeft:\"1.2vw\",backgroundColor:\"white\"}} >\r\n            \r\n            {/* {recent.map((v, i)=><RecentGroups key={'r_'+i}\r\n                                      UID={UID} GID={v.GID} GName={v.GName} \r\n                                      time={v.time} subject={v.subject} place={v.place}/>)} */}\r\n            \r\n          </Content>\r\n        </Else>\r\n      </If>\r\n            </Content>\r\n            <Footer style={{ textAlign: 'center' }}>Ant Design ©2018 Created by Ant UED</Footer>\r\n          </Layout>\r\n        </Layout>\r\n    )\r\n}\r\nexport default HomePage;\r\n\r\n","// import { Form } from '@ant-design/compatible';\r\nimport '@ant-design/compatible/assets/index.css';\r\nimport { Form, Modal, Input } from \"antd\";\r\n\r\nconst ChatModal = ({visible, onCreate, onCancel}) =>{\r\n    const [form] = Form.useForm()\r\n    return(\r\n        // <h1>aaa</h1>\r\n        <Modal\r\n            visible={visible}\r\n            title=\"請在下方輸入新的資料集連結\"\r\n            okText=\"Renew\"\r\n            cancelText=\"Cancel\"\r\n            onCancel={onCancel}\r\n            onOk={() => {\r\n            form.validateFields().then((values) => {\r\n                form.resetFields(); // 清空格子\r\n                onCreate(values); \r\n            }).catch((error) => {\r\n                window.alert('Validate Failed:', error);\r\n            });\r\n        }}>\r\n            <Form\r\n            form={form}\r\n            layout=\"vertical\"\r\n            name=\"form_in_modal\"\r\n            >\r\n                <Form.Item\r\n                name=\"url\" // name attr 後面取的名字是讓 onCreate 那邊可以取得使用者輸入的這格的值\r\n                label=\"新連結\"\r\n                rules={[\r\n                    {\r\n                      required: true,\r\n                      message: '錯誤：請輸入新的連結！',\r\n                    },\r\n                ]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\nexport default ChatModal;","import {useState} from 'react'\r\nimport { Form } from '@ant-design/compatible';\r\nimport '@ant-design/compatible/assets/index.css';\r\nimport { Input, Radio, DatePicker, Button, Row, Col } from 'antd';\r\nimport moment from 'moment';\r\nimport 'moment-timezone';\r\n\r\nconst formItemLayoutWithOutLabel = {\r\n    wrapperCol: {\r\n        xs: { span: 24, offset: 0 },\r\n        sm: { span: 20, offset: 4 },\r\n    },\r\n};\r\n\r\nconst { RangePicker, rangeConfig } = DatePicker\r\nconst DiscussionSet = ({UID, GID, sendData, displayStatus}) =>{\r\n    const [sendCreate, setSendCreate] = useState(false)\r\n    const [subject, setSubject] = useState('')\r\n    const [content, setContent] = useState('')\r\n    const [timeStart, setTimeStart] = useState('')\r\n    const [timeEnd, setTimeEnd] = useState('')\r\n    const [timeSpan, setTimeSpan] = useState('60')\r\n    const [deadline, setDeadline] = useState('')\r\n    const [place, setPlace] = useState('')\r\n\r\n    const config = {\r\n        rules: [{ type: 'object', required: true, message: 'Please select time!' }],\r\n    };\r\n    const rangeConfig = {\r\n        rules: [{ type: 'array', required: true, message: 'Please select time!' }],\r\n    };\r\n\r\n    const disabledDate = (current) => {\r\n        // Can not select days before today \r\n        return current && current < moment().startOf('day');\r\n    }\r\n\r\n\r\n    const handleSubmit = () =>{\r\n        console.log(UID, GID, subject, content, timeStart, timeEnd, timeSpan, deadline, place)\r\n        if(UID === ''){\r\n            throw new Error (\"Missing UID\")\r\n        }\r\n        if(GID === ''){\r\n            throw new Error (\"Missing GID\")\r\n        }\r\n        if(subject === ''){\r\n            displayStatus({type:'error', msg:'請輸入討論主題'})\r\n        }\r\n        if(content === ''){\r\n            displayStatus({type:'error', msg:'請輸入討論內容'})\r\n        }\r\n        if(timeStart === '' || timeEnd === ''){\r\n            displayStatus({type:'error', msg:'請選擇討論時間範圍'})\r\n        }\r\n        if(timeSpan === ''){\r\n            displayStatus({type:'error', msg:'請輸入討論時間間隔'})\r\n        }\r\n        if(deadline === ''){\r\n            displayStatus({type:'error', msg:'請輸入投票截止日期'})\r\n        }\r\n        if(deadline === ''){\r\n            displayStatus({type:'error', msg:'請輸入地點'})\r\n        }\r\n        let data = { UID, GID, subject, content, time_start: timeStart, time_end: timeEnd, time_span: timeSpan, deadline, place } \r\n        sendData(\"createDiscussion\", data)\r\n    }\r\n\r\n    const onChangeRangePicker = (value, dateString) =>{\r\n        // unformatted (moment type): value\r\n        // Formatted Selected Time: dateString\r\n        setTimeStart(moment.tz(dateString[0], 'Asia/Taipei').format())\r\n        setTimeEnd(moment.tz(dateString[1], 'Asia/Taipei').format())\r\n    }\r\n\r\n    const onChangeDatePicker = (value, dateString) =>{\r\n        setDeadline( moment.tz(dateString, 'Asia/Taipei').format())\r\n    }\r\n\r\n\r\n\r\n    return(\r\n        <>\r\n            <Form\r\n            {...formItemLayoutWithOutLabel}\r\n            name=\"dynamic_form_item\"\r\n            // rules={[{ required: true }]}\r\n            // onFinish={onFinish} // 通過驗證時觸發 (rules)\r\n            autoComplete=\"off\"\r\n            labelCol={{ span: 4 }}\r\n            wrapperCol={{ span: 14 }}\r\n            layout=\"horizontal\"\r\n            >\r\n                <Form.Item label=\"主題\">\r\n                    <Input onChange={(e)=>{setSubject(e.target.value)}} />\r\n                </Form.Item>\r\n                <Form.Item label=\"內容\">\r\n                    <Input.TextArea onChange={(e)=>{setContent(e.target.value)}}/>\r\n                </Form.Item>\r\n                <Form.Item label=\"地點\">\r\n                    <Input onChange={(e)=>{setPlace(e.target.value)}} />\r\n                </Form.Item>\r\n                <Form.Item name=\"range-time-picker\" label=\"討論時間範圍\" {...rangeConfig}>\r\n                    <RangePicker showTime format=\"YYYY-MM-DD HH:mm\" disabledDate={disabledDate} minuteStep={30} onChange={onChangeRangePicker}/>\r\n                </Form.Item>\r\n                <Form.Item label=\"討論時間間隔\" name=\"size\" >\r\n                    <Radio.Group onChange={(e)=>{setTimeSpan(e.target.value)}} defaultValue=\"60\">\r\n                        <Radio.Button value=\"30\">30 分鐘</Radio.Button>\r\n                        <Radio.Button value=\"60\">1 小時</Radio.Button>\r\n                        <Radio.Button value=\"120\">2 小時</Radio.Button>\r\n                    </Radio.Group>\r\n                </Form.Item>\r\n                <Form.Item name=\"date-time-picker\" label=\"投票截止時間\" {...config}>\r\n                    <DatePicker showTime format=\"YYYY-MM-DD HH\"  disabledDate={disabledDate} onChange={onChangeDatePicker}/>\r\n                </Form.Item>\r\n            </Form>\r\n            <Button type=\"primary\" htmlType=\"submit\" onClick={handleSubmit}>\r\n                創建討論\r\n            </Button>\r\n        </>\r\n\r\n    )\r\n}\r\nexport default DiscussionSet;","import {useState} from 'react'\r\nimport { Divider, Row, Col } from 'antd';\r\n\r\n\r\n\r\n\r\nconst DiscussionContent = ({subject, content}) =>{\r\n\r\n    \r\n\r\n    return(\r\n        <>\r\n            <Row>\r\n                <Col span={2}></Col>\r\n                <Col span={18}>\r\n                    <Divider orientation=\"left\" plain>\r\n                        主題\r\n                    </Divider>\r\n                    <p>{subject}</p>\r\n                    <Divider orientation=\"left\" plain>\r\n                        內容\r\n                    </Divider>\r\n                    <p>{content}</p>\r\n                </Col>\r\n            </Row>\r\n            \r\n        </>\r\n    )\r\n}\r\nexport default DiscussionContent;","import { useEffect, useState } from \"react\";\r\nimport { Divider, Row, Col } from 'antd';\r\nimport moment from 'moment';\r\nimport 'moment-timezone';\r\n\r\nconst VotedTime = ({time_options, UID}) =>{\r\n    const [show_options, setShowOptions] = useState([])\r\n\r\n    console.log(time_options)\r\n\r\n    useEffect(()=>{\r\n        if(time_options){\r\n            let options = []\r\n            options = Object.keys(time_options)\r\n            let newShowOptions = []\r\n            options.map((e)=>{\r\n                if(time_options[e].indexOf(UID) !== -1){\r\n                    newShowOptions.push(e)\r\n                }\r\n            }) \r\n            setShowOptions(newShowOptions)\r\n        }\r\n    }, [])\r\n\r\n    return(\r\n        <>\r\n            <Row>\r\n                <Col span={2}></Col>\r\n                <Col span={18}>\r\n                    <Divider orientation=\"center\" plain>\r\n                        你已經投票囉！\r\n                    </Divider>\r\n                    <h2>時間如下：</h2>\r\n                    <div>\r\n                        {show_options.map((e, index)=>(<p key={index}>{moment(e).tz('Asia/Taipei').format('YYYY-MM-DD HH:mm')}</p>))}\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\nexport default VotedTime;","import { useEffect, useState } from \"react\";\r\nimport { Divider, Row, Col, Tag } from 'antd';\r\nimport moment from 'moment';\r\nimport 'moment-timezone';\r\n\r\nconst SelectedTime = ({time_options, time_result}) =>{\r\n    const [show_options, setShowOptions] = useState([])\r\n\r\n\r\n    useEffect(()=>{\r\n        const options = Object.keys(time_options)\r\n        let newShowOptions = [] // 這裡改 show_options 就不行?\r\n        let newMax = 0\r\n        options.map((e)=>{\r\n            let cnt = time_options[e].length\r\n            if(cnt > newMax){\r\n                newMax = cnt\r\n            }\r\n            let formated = moment(e).tz('Asia/Taipei').format('YYYY-MM-DD HH:mm')\r\n            newShowOptions.push({option:formated, cnt})\r\n        }) \r\n        setShowOptions(newShowOptions)\r\n    }, [])\r\n\r\n    return(\r\n        <>\r\n            <Row>\r\n                <Col span={2}></Col>\r\n                <Col span={18}>\r\n                    <Divider orientation=\"center\" plain>\r\n                        投票結果！（藍底白字為最終結果）\r\n                    </Divider>\r\n                    <h2>如下：</h2>\r\n                    <div>\r\n                        {show_options.map(({option, cnt}, index)=>{\r\n                        if(option === moment(time_result).tz('Asia/Taipei').format('YYYY-MM-DD HH:mm')){\r\n                            return (\r\n                                <p key={index}>{option}：\r\n                                    <Tag color=\"#0066CC\">{cnt} 票</Tag>\r\n                                </p>\r\n                            )\r\n                        }\r\n                        else{\r\n                            return (\r\n                                <p key={index}>{option}：\r\n                                    <Tag color=\"blue\">{cnt} 票</Tag>\r\n                                </p>\r\n                            )\r\n                        }\r\n                        \r\n                    })}\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default SelectedTime ","import { useEffect, useState } from \"react\";\r\nimport { Divider, Row, Col, Radio, Button, Tag } from 'antd';\r\nimport moment from 'moment';\r\nimport 'moment-timezone';\r\n\r\n\r\nconst NotSelectedTime = ({UID, DID, time_options, isAdmin, sendData, displayStatus}) =>{\r\n    const [show_options, setShowOptions] = useState([])\r\n    const [time_result, setTimeResult] = useState('')\r\n    const [max, setMax] = useState(0)\r\n\r\n    useEffect(()=>{\r\n        if(time_options){\r\n            const options = Object.keys(time_options)\r\n            let newShowOptions = [] // 這裡改 show_options 就不行?\r\n            let newMax = 0\r\n            options.map((e)=>{\r\n                let cnt = time_options[e].length\r\n                if(cnt > newMax){\r\n                    newMax = cnt\r\n                }\r\n                let formated = moment(e).tz('Asia/Taipei').format('YYYY-MM-DD HH:mm')\r\n                newShowOptions.push({option:formated, cnt})\r\n            }) \r\n            setMax(newMax)\r\n            setShowOptions(newShowOptions)\r\n        } \r\n    }, [])\r\n\r\n    const handleSubmit = () =>{\r\n        if(time_result === ''){\r\n            displayStatus({type: 'error', msg: '請選擇最終時間'})\r\n        }\r\n\r\n        let data = {UID, DID, time_result}\r\n        sendData(\"confirmTime\", data)\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <Row>\r\n                <Col span={2}></Col>\r\n                <Col span={18}>\r\n                    <Divider orientation=\"center\" plain>\r\n                        投票結果！（創建討論者還未選擇最終結果）\r\n                    </Divider>\r\n                    <h2>如下：</h2>\r\n                    {isAdmin?(\r\n                        <>\r\n                        <Radio.Group name=\"radiogroup\" onChange={(e)=>{\r\n                            let time = moment.tz(e.target.value, 'Asia/Taipei').format(); setTimeResult(time)}}>\r\n                            {show_options.map(({option, cnt}, index)=>{\r\n                                if(cnt === max){\r\n                                    return(<Radio key={index} value={option} style={{margin:'3px'}}>{option}： \r\n                                        <Tag color=\"cyan\">{cnt} 票</Tag>\r\n                                    </Radio>)\r\n                                }\r\n                                else{\r\n                                    return(<Radio key={index} value={option} style={{margin:'3px'}} disabled={true}>{option}： \r\n                                        <Tag color=\"blue\">{cnt} 票</Tag>\r\n                                    </Radio>)\r\n                                }\r\n                            })}\r\n                        </Radio.Group>\r\n                        <Button type=\"primary\" htmlType=\"submit\" style={{marginTop: \"10px\"}} onClick={handleSubmit}>\r\n                            確認時間\r\n                        </Button>\r\n                        </>\r\n                    ):(\r\n                    <div>\r\n                        {show_options.map(({option, cnt}, index)=>{\r\n                            if(cnt === max){\r\n                                return(\r\n                                    <p key={index} value={option} style={{margin:'3px'}}>{option}： \r\n                                        <Tag color=\"cyan\">{cnt} 票</Tag>\r\n                                    </p>\r\n                                )\r\n                            }\r\n                            else{\r\n                                return (\r\n                                    <p key={index} value={option} style={{margin:'3px'}}>{option}： \r\n                                        <Tag color=\"blue\">{cnt} 票</Tag>\r\n                                    </p>)\r\n                            }\r\n                            \r\n                        })}\r\n                    </div>\r\n                    )}\r\n                    \r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default NotSelectedTime ","import { Checkbox, Row, Col, Button } from 'antd';\r\nimport { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router';\r\nimport VotedTime from './VotedTime';\r\nimport SelectedTime from './SelectedTime';\r\nimport NotSelectedTime from './NotSelectedTime';\r\nimport moment from 'moment';\r\nimport 'moment-timezone';\r\n\r\n\r\nconst DiscussionTime = ({time_options, voted, isDue, isAdmin, sendData, isSelect, displayStatus, time_result}) =>{\r\n\r\n    const { UID, GID, DID } = useParams()\r\n    const [checkList, setCheckList] = useState([])\r\n    const [options, setOptions] = useState([])\r\n    \r\n    useEffect(()=>{\r\n      if(time_options){\r\n        let newOptions = []\r\n        newOptions = Object.keys(time_options)\r\n        setOptions(newOptions)\r\n      }\r\n    }, [time_options])\r\n\r\n    const handleCheck = (e, option)=>{\r\n\r\n      let newCheckList = checkList\r\n      // let n = `${option}`\r\n      let time = moment.tz(option, 'Asia/Taipei').format()\r\n      if(e.target.checked){\r\n        newCheckList.push(time)\r\n      }\r\n      else{\r\n        newCheckList = newCheckList.filter(item => (item !== time))\r\n      }\r\n      setCheckList(newCheckList)\r\n    }\r\n\r\n    const handleVote = () =>{\r\n      if(checkList !== []){\r\n        let data = {UID, DID, times:checkList}\r\n        sendData(\"voteTime\", data)\r\n      }\r\n      else{\r\n        displayStatus({type: \"error\", msg: '請選擇要投票的時間'})\r\n      }\r\n    }\r\n\r\n    return(\r\n      <>\r\n        {isDue?(isSelect?(<SelectedTime time_options={time_options} time_result={time_result}/>):(\r\n        <NotSelectedTime \r\n        UID={UID} \r\n        DID={DID} \r\n        displayStatus={displayStatus} \r\n        time_options={time_options} \r\n        isAdmin={isAdmin} \r\n        sendData={sendData}/>)):(voted?\r\n        (<VotedTime time_options={time_options} UID={UID} />)\r\n        :(<Row>\r\n          {options.map((option, index)=>{\r\n            return(\r\n            <>\r\n              <Col span={2}></Col>\r\n              <Col span={22}>\r\n                <Checkbox key={index} style={{margin: \"1%\"}} onChange={(e)=>{handleCheck(e, option)}}>{moment(option).tz('Asia/Taipei').format('YYYY-MM-DD HH:mm')}</Checkbox>\r\n              </Col>\r\n              {index === options.length-1?(\r\n              <>\r\n                <Col span={2}></Col>\r\n                <Button type=\"primary\" htmlType=\"submit\" onClick={handleVote}>\r\n                  送出投票\r\n                </Button>\r\n              </>):null}\r\n            </>)\r\n          })}\r\n        </Row>))}\r\n        \r\n      </>\r\n    )\r\n}\r\nexport default DiscussionTime;\r\n","import { useEffect, useState } from \"react\";\r\nimport { Divider, Row, Col } from 'antd';\r\n\r\nconst VotedTime = ({place_options, UID}) =>{\r\n    const [show_options, setShowOptions] = useState([])\r\n    \r\n    useEffect(()=>{\r\n        if(place_options){\r\n            const options = Object.keys(place_options)\r\n            let newShowOptions = []\r\n            options.map((e)=>{\r\n                if(place_options[e].indexOf(UID) !== -1){\r\n                    newShowOptions.push(e)\r\n                }\r\n            })\r\n            setShowOptions(newShowOptions)\r\n        }\r\n        \r\n\r\n    }, [])\r\n\r\n    return(\r\n        <>\r\n            <Row>\r\n                <Col span={2}></Col>\r\n                <Col span={18}>\r\n                    <Divider orientation=\"center\" plain>\r\n                        你已經投票囉！\r\n                    </Divider>\r\n                    <h2>地點如下：</h2>\r\n                    <div>\r\n                        {show_options?(show_options.map((e, index)=>(<p key={index}>{e}</p>))):(null)}\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\nexport default VotedTime;","import { useEffect, useState } from \"react\";\r\nimport { Divider, Row, Col, Tag } from 'antd';\r\n\r\nconst SelectedPlace = ({place_options, place_result}) =>{\r\n    const [show_options, setShowOptions] = useState([])\r\n    const [max, setMax] = useState(0)\r\n\r\n\r\n    useEffect(()=>{\r\n        const options = Object.keys(place_options)\r\n        let newShowOptions = [] // 這裡改 show_options 就不行?\r\n        let newMax = 0\r\n        options.map((e)=>{\r\n            let cnt = place_options[e].length\r\n            if(cnt > newMax){\r\n                newMax = cnt\r\n            }\r\n            newShowOptions.push({option:e, cnt})\r\n        }) \r\n        setMax(newMax)\r\n        setShowOptions(newShowOptions)\r\n    }, [])\r\n\r\n    return(\r\n        <>\r\n            <Row>\r\n                <Col span={2}></Col>\r\n                <Col span={18}>\r\n                    <Divider orientation=\"center\" plain>\r\n                        投票結果！（藍底白字為最終結果）\r\n                    </Divider>\r\n                    <h2>如下：</h2>\r\n                    <div>\r\n                        {show_options.map(({option, cnt}, index)=>{\r\n                        if(option === place_result){\r\n                            return (\r\n                                <p key={index}>{option}：\r\n                                    <Tag color=\"#0066CC\">{cnt} 票</Tag>\r\n                                </p>\r\n                            )\r\n                        }\r\n                        else{\r\n                            return (\r\n                                <p key={index}>{option}：\r\n                                    <Tag color=\"blue\">{cnt} 票</Tag>\r\n                                </p>\r\n                            )\r\n                        }\r\n                        \r\n                    })}\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default SelectedPlace","import { useEffect, useState } from \"react\";\r\nimport { Divider, Row, Col, Radio, Button, Tag } from 'antd';\r\n\r\n\r\nconst NotSelectedPlace = ({UID, DID, place_options, isAdmin, sendData, displayStatus}) =>{\r\n    const [show_options, setShowOptions] = useState([])\r\n    const [place_result, setPlaceResult] = useState('')\r\n    const [max, setMax] = useState(0)\r\n\r\n\r\n    useEffect(()=>{\r\n        if(place_options){\r\n            let options = []\r\n            options = Object.keys(place_options)\r\n            let newShowOptions = [] // 這裡改 show_options 就不行?\r\n            let newMax = 0\r\n            options.map((e)=>{\r\n                let cnt = place_options[e].length\r\n                if(cnt > newMax){\r\n                    newMax = cnt\r\n                }\r\n                newShowOptions.push({option:e, cnt})\r\n            }) \r\n            setMax(newMax)\r\n            setShowOptions(newShowOptions)\r\n        }\r\n    }, [place_options])\r\n\r\n    const handleSubmit = () =>{\r\n        if(place_result === ''){\r\n            displayStatus({type: 'error', msg: '請選擇最終地點'})\r\n        }\r\n\r\n        let data = {UID, DID, place_result}\r\n        sendData(\"confirmPlace\", data)\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <Row>\r\n                <Col span={2}></Col>\r\n                <Col span={18}>\r\n                    <Divider orientation=\"center\" plain>\r\n                        投票結果！（創建討論者還未選擇最終結果）\r\n                    </Divider>\r\n                    <h2>如下：</h2>\r\n                    {isAdmin?(\r\n                        <>\r\n                        <Radio.Group name=\"radiogroup\" onChange={(e)=>{setPlaceResult(e.target.value)}}>\r\n                            {show_options.map(({option, cnt}, index)=>{\r\n                                if(cnt === max){\r\n                                    return(<Radio key={index} value={option} style={{margin:'3px'}}>{option}： \r\n                                        <Tag color=\"cyan\">{cnt} 票</Tag>\r\n                                    </Radio>)\r\n                                }\r\n                                else{\r\n                                    return(<Radio key={index} value={option} style={{margin:'3px'}} disabled={true}>{option}： \r\n                                        <Tag color=\"blue\">{cnt} 票</Tag>\r\n                                    </Radio>)\r\n                                }\r\n                            })}\r\n                        </Radio.Group>\r\n                        <Button type=\"primary\" htmlType=\"submit\"  style={{marginTop: \"10px\"}} onClick={handleSubmit}>\r\n                            確認地點\r\n                        </Button>\r\n                        </>\r\n                    ):(\r\n                    <div>\r\n                        {show_options.map(({option, cnt}, index)=>{\r\n                            if(cnt === max){\r\n                                return(\r\n                                    <p key={index} value={option} style={{margin:'3px'}}>{option}： \r\n                                        <Tag color=\"cyan\">{cnt} 票</Tag>\r\n                                    </p>\r\n                                )\r\n                            }\r\n                            else{\r\n                                return (\r\n                                    <p key={index} value={option} style={{margin:'3px'}}>{option}： \r\n                                        <Tag color=\"blue\">{cnt} 票</Tag>\r\n                                    </p>)\r\n                            }\r\n                            \r\n                        })}\r\n                    </div>\r\n                    )}\r\n                    \r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default NotSelectedPlace","import '@ant-design/compatible/assets/index.css';\r\nimport { Form, Modal, Input } from \"antd\";\r\n\r\nconst PlaceModal = ({visible, onCreate, onCancel}) =>{\r\n    const [form] = Form.useForm()\r\n    return(\r\n        <Modal\r\n            visible={visible}\r\n            title=\"請輸入新增地點名稱\"\r\n            okText=\"新增\"\r\n            cancelText=\"取消\"\r\n            onCancel={onCancel}\r\n            onOk={() => {\r\n            form.validateFields().then((values) => {\r\n                form.resetFields(); // 清空格子\r\n                onCreate(values); \r\n            }).catch((error) => {\r\n                window.alert('Validate Failed:', error);\r\n            });\r\n        }}>\r\n            <Form\r\n            form={form}\r\n            layout=\"vertical\"\r\n            name=\"form_in_modal\"\r\n            >\r\n                <Form.Item\r\n                name=\"place\" // name attr 後面取的名字是讓 onCreate 那邊可以取得使用者輸入的這格的值\r\n                label=\"新地點\"\r\n                rules={[\r\n                    {\r\n                      required: true,\r\n                      message: '錯誤：請輸入要新增的地點！',\r\n                    },\r\n                ]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\nexport default PlaceModal;","import { useState, useEffect } from 'react'\r\nimport { Form, Input, Button, Checkbox, Row, Col,  } from 'antd';\r\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport { useParams } from 'react-router';\r\nimport VotedPlace from './VotedPlace';\r\nimport SelectedPlace from './SelectedPlace';\r\nimport NotSelectedPlace from './NotSelectedPlace';\r\nimport PlaceModal from './PlaceModal'\r\n\r\n\r\n\r\nconst DiscussionPlace = ({isDue, isAdmin, voted, place_options, sendData, isSelect, displayStatus, place_result}) =>{\r\n\r\n    const { UID, GID, DID } = useParams()\r\n    const [checkList, setCheckList] = useState([])\r\n    const [modalVisible, setModalVisible] = useState(false)\r\n    const [options, setOptions] = useState([])\r\n    \r\n\r\n    useEffect(()=>{\r\n        if(place_options){\r\n            let newOptions = []\r\n            newOptions = Object.keys(place_options)\r\n            setOptions(newOptions)\r\n        }\r\n    }, [place_options])\r\n\r\n\r\n    const addPlace = (place) =>{\r\n        let data = {UID, DID, place}\r\n        sendData(\"addPlace\", data)\r\n    }\r\n\r\n    const handleSubmit = () =>{\r\n        console.log(checkList)\r\n        if(checkList.length === 0){\r\n            displayStatus({type: 'error', msg: '請選擇要投票的地方'})\r\n            return \r\n        }\r\n        let data = {UID, DID, places:checkList}\r\n        sendData(\"votePlace\", data)\r\n    }\r\n\r\n    \r\n    return(\r\n        <>\r\n            {isDue?(isSelect?(<SelectedPlace place_options={place_options} place_result={place_result}/>):(\r\n            <NotSelectedPlace \r\n                UID={UID} \r\n                DID={DID} \r\n                displayStatus={displayStatus} \r\n                place_options={place_options} \r\n                isAdmin={isAdmin} \r\n                sendData={sendData}/>)):\r\n            voted?(<VotedPlace UID={UID} place_options={place_options} />):\r\n            (<>\r\n            <Checkbox.Group style={{ width: '100%' }} onChange={(list)=>{setCheckList(list)}}>\r\n                <Row>\r\n                    {options.map((option, index)=>{\r\n                        return(\r\n                        <>\r\n                        <Col span={8}>\r\n                            <Checkbox value={option} key={index}>{option}</Checkbox>\r\n                        </Col>\r\n                        <br />\r\n                        </>\r\n                        )\r\n                    })}\r\n                </Row>\r\n            </Checkbox.Group>\r\n            \r\n            <PlaceModal \r\n                visible={modalVisible}\r\n                onCreate={({place})=>{\r\n                    setModalVisible(false) \r\n                    addPlace(place)\r\n                }}\r\n                onCancel={()=>{\r\n                    setModalVisible(false)\r\n                }}/>\r\n\r\n            <Button type=\"dashed\" key=\"addPlace\" onClick={()=>{setModalVisible(true)}}  style={{marginTop: \"10px\"}}> 新增地點 </Button>\r\n            <br />\r\n            <Button type=\"primary\" onClick={()=>{handleSubmit()}} style={{marginTop: \"10px\"}}>\r\n                送出投票\r\n            </Button>\r\n\r\n            </>)}\r\n        </>\r\n    )\r\n}\r\nexport default DiscussionPlace;","import {useEffect, useState} from 'react'\r\nimport { Layout, Menu, Breadcrumb, BackTop } from 'antd';\r\nimport DiscussionContent from '../Components/DiscussionContent'\r\nimport DiscussionTime from '../Components/DiscussionTime'\r\nimport DiscussionPlace from '../Components/DiscussionPlace'\r\nimport {\r\n  UserOutlined,\r\n  WechatOutlined,\r\n  FieldTimeOutlined,\r\n  BookOutlined,\r\n  HomeOutlined,\r\n  RollbackOutlined,\r\n} from '@ant-design/icons';\r\nimport { useParams, useHistory, useLocation } from \"react-router-dom\";\r\n\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\n\r\nconst DiscussionPage = ({UName, DName, GName, isAdmin, subject, content, sendData, time_options, isDue, time_voted, place_voted, place_options, isSelectTime, isSelectPlace, displayStatus, time_result, place_result, message}) =>{\r\n    const { UID, GID, DID } = useParams();\r\n    const [collapsed, setCollapsed] = useState(false)\r\n    const [activeKey, setActiveKey] = useState('content')\r\n    const history = useHistory()\r\n    const location = useLocation()\r\n\r\n    const onCollapse = collapsed => {\r\n        setCollapsed(collapsed);\r\n    };\r\n\r\n    // 回上一頁\r\n    const back = () =>{\r\n      history.push({pathname:`/${UID}/${GID}`, state:{UName:location.state.UName}});\r\n    }\r\n\r\n    // const handleClick_content = () =>{\r\n\r\n    // }\r\n\r\n\r\n    /// get data for DiscussionTime\r\n    const handleClick_time = () =>{\r\n      let data = {UID, DID}  \r\n      sendData(\"time\", data)  \r\n    }\r\n\r\n    /// get data for DiscussionPlace\r\n    const handleClick_place = () =>{\r\n      let data = {UID, DID}  \r\n      sendData(\"place\", data)\r\n    }\r\n\r\n    // setKey & render\r\n    useEffect(()=>{\r\n        if(message.api === 'time' || message.api === 'place'){\r\n          setActiveKey(message.api)\r\n        }\r\n    }, [message])\r\n\r\n\r\n    return(\r\n        \r\n        <Layout style={{ minHeight: '100vh' }}>\r\n          <Sider collapsible collapsed={collapsed} onCollapse={onCollapse}>\r\n            <div className=\"logo\" />\r\n            <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\">\r\n              <Menu.Item key=\"User\" icon={<UserOutlined />} title=\"User\" style={{height: \"60px\"}}>\r\n                {location.state.UName}\r\n              </Menu.Item>\r\n              <Menu.Item key=\"content\" icon={<BookOutlined />} title=\"內容\" onClick={(e)=>{setActiveKey(e.key)}}>\r\n                討論內容\r\n              </Menu.Item>\r\n              <Menu.Item key=\"time\" icon={<FieldTimeOutlined />} title=\"時間\" onClick={()=>{handleClick_time()}}>\r\n                討論時間\r\n              </Menu.Item>\r\n              <Menu.Item key=\"place\" icon={<HomeOutlined />} title=\"地點\" onClick={()=>{handleClick_place()}}>\r\n                討論地點\r\n              </Menu.Item>\r\n              <Menu.Item key=\"Back\" icon={<RollbackOutlined />} title=\"回上一頁\" onClick={(e)=>{setActiveKey(e.key); back();}}>\r\n                回上一頁\r\n              </Menu.Item>\r\n            </Menu>\r\n          </Sider>\r\n          <Layout className=\"site-layout\">\r\n            {/* <Header className=\"site-layout-background\" style={{ padding: 0 }} /> */}\r\n            <Content style={{ margin: '0 16px' }}>\r\n              <Breadcrumb style={{ margin: '16px 0' }}>\r\n                <Breadcrumb.Item>群組</Breadcrumb.Item>\r\n                <Breadcrumb.Item>{location.state.GName}</Breadcrumb.Item>\r\n                <Breadcrumb.Item>討論</Breadcrumb.Item>\r\n                <Breadcrumb.Item>{location.state.subject}</Breadcrumb.Item>\r\n              </Breadcrumb>\r\n              <div className=\"site-layout-background\" style={{ padding: 24, minHeight: 360 }}>\r\n                {activeKey === \"content\"?(<DiscussionContent subject={location.state.subject} content={location.state.content}/>):\r\n                (activeKey === \"time\"?(\r\n                <DiscussionTime \r\n                voted={time_voted} \r\n                time_options={time_options} \r\n                isDue={isDue} \r\n                isAdmin={isAdmin} \r\n                sendData={sendData} \r\n                isSelect={isSelectTime} \r\n                displayStatus={displayStatus}\r\n                time_result={time_result}/>):(\r\n                <DiscussionPlace \r\n                voted={place_voted} \r\n                place_options={place_options}\r\n                isDue={isDue} \r\n                isAdmin={isAdmin} \r\n                sendData={sendData} \r\n                isSelect={isSelectPlace} \r\n                displayStatus={displayStatus}\r\n                place_result={place_result} />))}\r\n              </div>\r\n            </Content>\r\n            <Footer style={{ textAlign: 'center' }}>Ant Design ©2018 Created by Ant UED</Footer>\r\n          </Layout>\r\n        </Layout>\r\n    )\r\n}\r\nexport default DiscussionPage;","import \"../App.css\";\r\nimport { useEffect, useState, useRef } from \"react\"\r\nimport {Tabs, Input} from \"antd\"\r\n\r\n\r\nconst ChatRoom = ({UName, displayStatus, messages, sendData, UID, GID}) =>{\r\n    const [messageInput, setMessageInput] = useState(\"\") \r\n    const endMsg = useRef(null) \r\n\r\n    const handleMessage = (msg) =>{\r\n        let data = {UID, GID, body:msg}\r\n        sendData('message', data)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        endMsg.current.scrollIntoView({behavior: \"smooth\"})\r\n    })\r\n    \r\n    \r\n    return(\r\n        <>\r\n            <div className=\"App-message\">\r\n                {console.log(messages)}\r\n                {messages === undefined ? null:(messages === []? (<p>loading...</p>): (messages.map(({sender, body}, index)=>{\r\n\r\n                    return sender === UName?(\r\n                        <div id={index} style={{display: \"flex\", justifyContent: \"flex-end\"}} ref={index === messages.length - 1?endMsg:null}>\r\n                            <p className=\"wrap\">{body}</p>\r\n                            <p style={{fontStyle:\"italic\"}}>{sender}  &ensp;</p> \r\n                        </div> //這裡 p 沒有 key 會噴 error //&ensp; -> 半形空格\r\n                    ):(\r\n                        <div id={index} style={{display: \"flex\", justifyContent: \"flex-start\"}}>\r\n                            <p style={{fontStyle:\"italic\"}}>{sender}  &ensp;</p> \r\n                            <p className=\"wrap\">{body}</p>\r\n                        </div>\r\n                    )})))}\r\n            </div>\r\n            \r\n            <Input.Search\r\n            placeholder=\"Please enter message here...\"\r\n            value={messageInput}\r\n            enterButton=\"Send\"\r\n            onChange={(e)=>{setMessageInput(e.target.value)}}\r\n            style={{width: \"300px\", margin: \"50px\"}}\r\n            onSearch={(msg)=>{\r\n                if(!msg){\r\n                    displayStatus({\r\n                        type: \"error\",\r\n                        msg: \"Please enter message.\"\r\n                    })\r\n                    return\r\n                } \r\n                handleMessage(msg)\r\n                setMessageInput(\"\")\r\n                // endMsg.current.scrollIntoView({behavior: \"smooth\"})\r\n            }}\r\n            ></Input.Search>\r\n        </>\r\n    )\r\n}\r\nexport default ChatRoom;","import {useEffect, useState} from 'react'\r\nimport ChatModal from '../Components/URLModal'\r\nimport DiscussionSet from './DiscussionSet'\r\nimport DiscussionPage from './DiscussionPage'\r\n///// antd /////\r\nimport { Layout, Menu, Breadcrumb } from 'antd';\r\nimport {\r\n  FileOutlined,\r\n  TeamOutlined,\r\n  UserOutlined,\r\n  WechatOutlined,\r\n  SmileOutlined,\r\n  RollbackOutlined,\r\n} from '@ant-design/icons';\r\n///// react-router-dom /////\r\nimport { useParams, useHistory, useLocation } from \"react-router-dom\";\r\nimport ChatRoom from '../Components/ChatRoom';\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\n\r\nconst GroupPage = ({UName, code, GName, isAdmin, file, discussions, sendData, displayStatus, message, messages}) =>{\r\n\r\n\r\n    const { UID, GID } = useParams();\r\n    const [collapsed, setCollapsed] = useState(false)\r\n    const [activeKey, setActiveKey] = useState('')\r\n    const [modalVisible, setModalVisible] = useState(false)\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n\r\n    const onCollapse = collapsed => {\r\n        console.log(collapsed);\r\n        setCollapsed(collapsed);\r\n    };\r\n\r\n    const renewURL = (url)=>{\r\n      let data = {GID, file:url}\r\n      sendData(\"renewFile\", data)\r\n    }\r\n    \r\n    useEffect(()=>{\r\n      let data = {UID, GID}  \r\n      sendData(\"chat\", data)\r\n    }, [])\r\n\r\n    useEffect(()=>{\r\n      if(message.api === 'discussion'){\r\n        history.push({pathname:`/${UID}/${GID}/${message.data.DID}`, state:{UName:location.state.UName, GName, subject: message.data.subject, content: message.data.content}});\r\n      }\r\n      if(message.api === 'chat'){\r\n        setActiveKey(\"ChatRoom\")\r\n      }\r\n      if(message.api === 'renewFile'){\r\n        if(message.data.status === true){\r\n          displayStatus({type: 'success', msg: '資料集連結已成功更新！'})\r\n        }\r\n        else{\r\n          displayStatus({type: 'error', msg: '資料集連結更新失敗'})\r\n        }\r\n      }\r\n    }, [message])\r\n\r\n    const handleDiscussionClick = (DID) =>{\r\n      /// get data for DiscussionPage\r\n      let data = {UID, DID}  \r\n      sendData(\"discussion\", data)\r\n      /// get data for DiscussionPage\r\n    }\r\n\r\n    const handleBack = () =>{\r\n      var data1 = location.state.data;\r\n      var data = data1.postdata;\r\n      var path = {\r\n        pathname:\"/index\",\r\n        state:{data},\r\n      }\r\n      console.log(\"pushback\", data)\r\n      history.push(path);\r\n    }\r\n\r\n    const handleChatRoom = () =>{\r\n      let data = {UID, GID}\r\n      sendData('chat', data)\r\n    }\r\n\r\n    return(\r\n      <>\r\n        <Layout style={{ minHeight: '100vh' }}>\r\n          <Sider collapsible collapsed={collapsed} onCollapse={onCollapse}>\r\n            <div className=\"logo\" />\r\n            <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\">\r\n              <Menu.Item key=\"User\" icon={<UserOutlined />} title=\"User\" style={{height: \"60px\"}}>\r\n                {location.state.data.UName}\r\n              </Menu.Item>\r\n              <Menu.Item key=\"ChatRoom\" icon={<WechatOutlined />} title=\"ChatRoom\" onClick={()=>{handleChatRoom()}}>\r\n                聊天室\r\n              </Menu.Item>\r\n              <SubMenu key=\"File\" icon={<FileOutlined />} title=\"資料集連結\">\r\n                <Menu.Item key=\"gotoURL\" onClick={(e)=>{window.open(location.state.data.file)}}>前往連結</Menu.Item>\r\n                <Menu.Item key=\"renewURL\" onClick={()=>{setModalVisible(true)}}>更新連結</Menu.Item>\r\n              </SubMenu>\r\n\r\n              <ChatModal \r\n                visible={modalVisible}\r\n                onCreate={({url})=>{\r\n                    setActiveKey(\"\")\r\n                    setModalVisible(false) \r\n                    renewURL(url)\r\n                }}\r\n                onCancel={()=>{\r\n                    setActiveKey(\"\")\r\n                    setModalVisible(false)\r\n                }}/>\r\n\r\n              <Menu.Item key=\"Discussion\" icon={<SmileOutlined />} title=\"Discussion\" onClick={(e)=>{setActiveKey(\"Discussion\")}}>\r\n                來約討論\r\n              </Menu.Item>\r\n              <SubMenu key=\"Discussions\" icon={<TeamOutlined />} title=\"討論\">\r\n                {discussions.map((d, index)=>{\r\n                  return(\r\n                    <Menu.Item key={`Discussions_${d.DID}`} onClick={(e)=>{handleDiscussionClick(d.DID);}}>{d.subject}</Menu.Item>\r\n                  )\r\n                })}\r\n              </SubMenu>\r\n              <Menu.Item key=\"Back\" icon={<RollbackOutlined />} title=\"回上一頁\" onClick={(e)=>{handleBack()}}>\r\n                回上一頁\r\n              </Menu.Item>\r\n            </Menu>\r\n          </Sider>\r\n          <Layout className=\"site-layout\">\r\n            {/* <Header className=\"site-layout-background\" style={{ padding: 0 }} /> */}\r\n            <Content style={{ margin: '0 16px' }}>\r\n              <Breadcrumb style={{ margin: '16px 0' }}>\r\n                <Breadcrumb.Item>群組</Breadcrumb.Item>\r\n                <Breadcrumb.Item>{GName}</Breadcrumb.Item>\r\n              </Breadcrumb>\r\n              <div className=\"site-layout-background\" style={{ padding: 24, minHeight: 360 }}>\r\n                {activeKey === \"ChatRoom\"? (<ChatRoom UName={location.state.data.UName} displayStatus={displayStatus} messages={messages} sendData={sendData} UID={UID} GID={GID} />):(activeKey === \"Discussion\"?(<DiscussionSet UID={UID} GID={GID} sendData={sendData} displayStatus={displayStatus} />):(null))}\r\n              </div>\r\n            </Content>\r\n            <Footer style={{ textAlign: 'center' }}>Ant Design ©2018 Created by Ant UED</Footer>\r\n          </Layout>\r\n        </Layout>\r\n      </>\r\n    )\r\n}\r\nexport default GroupPage;","import { useState } from \"react\";\r\nconst client = new WebSocket('ws://localhost:4000')\r\n\r\nconst useData = () => {\r\n    const [file, setFile] = useState(\"\")\r\n    const [code, setCode] = useState(\"\")\r\n    const [group, setGroup] = useState([])\r\n    const [UName, setUName] = useState(\"\")\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n    const [discuss_content, setDiscussContent] = useState(\"\") \r\n    const [discussions, setDiscussions] = useState([])\r\n    const [GName, setGName] = useState(\"\")\r\n    const [subject, setSubject] = useState(\"\")\r\n    const [time_options, setTimeOptions] = useState({})\r\n    const [place_options, setPlaceOptions] = useState({})\r\n    const [isDue, setIsDue] = useState(false)\r\n    const [time_voted, setTimeVoted] = useState(false)\r\n    const [place_voted, setPlaceVoted] = useState(false)\r\n    const [isSelectPlace, setIsSelectPlace] = useState(false)\r\n    const [isSelectTime, setIsSelectTime] = useState(false)\r\n    const [time_result, setTimeResult] = useState('')\r\n    const [place_result, setPlaceResult] = useState('')\r\n    const [status, setStatus] = useState();\r\n    const [UID, setUID] = useState(\"\");\r\n    const [error_msg, setError_msg] = useState(\"\");\r\n    const [recent, setRecent] = useState([{}]);\r\n    const [voting, setVoting] = useState([{}]);\r\n    const [admin, setAdmin] = useState(\"\");\r\n    const [GID, setGID] = useState(\"\");\r\n    const [mess, setMess] = useState(\"\");\r\n    const [messages, setMessages] = useState([])\r\n\r\n    client.onopen = () => {\r\n        console.log(\"client connected\")\r\n    }\r\n\r\n    client.onmessage = (byteString) => {\r\n        const message = JSON.parse(byteString.data);\r\n        setMess(message)\r\n        const { api, data } = message\r\n        console.log(message)\r\n        switch (api) {\r\n            case \"register\": {\r\n                setMess(data);\r\n                break\r\n            }\r\n            case \"login\": {\r\n                setMess(data);\r\n                break\r\n            }\r\n            case \"index\": {\r\n                setMess(data);\r\n                break\r\n            }\r\n            case \"createGroup\": {\r\n                setMess(data);\r\n                break\r\n            }\r\n            case \"joinGroup\": {\r\n                setMess(data);\r\n                break\r\n            }\r\n            case \"renewProfile\": {\r\n                setMess(data);\r\n                break\r\n            }\r\n            case \"group\": {\r\n                const { status } = data;\r\n                if (status === true) {\r\n                    setCode(data.code)\r\n                    setGName(data.GName)\r\n                    // setContent(data.content)\r\n                    setDiscussions(data.discussions)\r\n                    setIsAdmin(data.isAdmin)\r\n                    setFile(data.file)\r\n                }\r\n\r\n                break\r\n            }\r\n            case \"renewFile\": {\r\n                const { status } = data;\r\n                if(status === true){\r\n                    setFile(data.file)\r\n                }\r\n                else{\r\n                    console.log(\"DB error\")\r\n                }\r\n                break\r\n            }\r\n            case \"createDiscussion\": {\r\n                setDiscussions(data.discussions)\r\n                break\r\n            }\r\n            case \"discussion\": {\r\n                const { status } = data;\r\n                if (status === true){\r\n                    setSubject(data.subject)\r\n                    setDiscussContent(data.content)\r\n                    setIsAdmin(data.isAdmin)\r\n                    \r\n                }\r\n                break\r\n            }\r\n            case \"time\": {\r\n                const { status } = data;\r\n                if (status === true){\r\n                    setTimeOptions(data.time_options)\r\n                    setIsDue(data.isDue)\r\n                    setIsAdmin(data.isAdmin)\r\n                    setTimeVoted(data.voted)\r\n                    setIsSelectTime(data.isSelect)\r\n                    setTimeResult(data.time_result)\r\n                }\r\n                break\r\n            }\r\n            case \"place\": {\r\n                const { status } = data;\r\n                if (status === true){\r\n                    setPlaceOptions(data.place_options)\r\n                    setIsDue(data.isDue)\r\n                    setIsAdmin(data.isAdmin)\r\n                    setPlaceVoted(data.voted)\r\n                    setIsSelectPlace(data.isSelect)\r\n                    setPlaceResult(data.place_result)\r\n                }\r\n                break\r\n            }\r\n            case \"addPlace\":{\r\n                const { status } = data;\r\n                if (status === true){\r\n                    setPlaceOptions(data.place_options)\r\n                }\r\n                break\r\n\r\n            }\r\n            case \"votePlace\":{\r\n                const { status } = data;\r\n                if (status === true){\r\n                    setPlaceOptions(data.place_options)\r\n                    setPlaceVoted(data.status)\r\n                }\r\n                break\r\n\r\n            }\r\n            case \"voteTime\":{\r\n                const { status } = data;\r\n                if (status === true){\r\n                    setTimeOptions(data.time_options)\r\n                    setTimeVoted(data.status)\r\n                }\r\n                break\r\n\r\n            }\r\n            case \"confirmTime\":{\r\n                const { status } = data;\r\n                if(status === true){\r\n                    setTimeResult(data.time_result)\r\n                    setIsSelectTime(data.status)\r\n                }\r\n                break\r\n            }\r\n            case \"confirmPlace\":{\r\n                const { status } = data;\r\n                if(status === true){\r\n                    setPlaceResult(data.place_result)\r\n                    setIsSelectPlace(data.status)\r\n                }\r\n                break\r\n            }\r\n            case \"chat\":{\r\n                const { status } = data;\r\n                if(status === true){\r\n                    setMessages(data.messages)\r\n                }\r\n                break\r\n            }\r\n            case \"message\":{\r\n                const { status } = data;\r\n                if(status === true){\r\n                    const {sender, body} = data\r\n                    let newMessages = messages\r\n                    newMessages.push({sender, body})\r\n                    setMessages(newMessages)\r\n                }\r\n                break\r\n            }\r\n            default:\r\n                break\r\n        }\r\n    }\r\n\r\n\r\n    const sendData = async (api, data) => {\r\n        await waitForOpenSocket()\r\n        const message = { api, data }\r\n        client.send(JSON.stringify(message))\r\n    }\r\n\r\n    const waitForOpenSocket = () => {\r\n        return new Promise((resolve, reject) => {\r\n            const maxNumberOfAttempts = 10\r\n            const intervalTime = 200 //ms\r\n    \r\n            let currentAttempt = 0\r\n            const interval = setInterval(() => {\r\n                if (currentAttempt > maxNumberOfAttempts - 1) {\r\n                    clearInterval(interval)\r\n                    reject(new Error('Maximum number of attempts exceeded'))\r\n                } else if (client.readyState === client.OPEN) {\r\n                    clearInterval(interval)\r\n                    resolve()\r\n                }\r\n                currentAttempt++\r\n            }, intervalTime)\r\n        })\r\n    }\r\n\r\n\r\n    return {\r\n        sendData,\r\n        code,\r\n        group,\r\n        isAdmin,\r\n        discussions,\r\n        file,\r\n        UName,\r\n        GName,\r\n        discuss_content,\r\n        subject,\r\n        time_options,\r\n        isDue,\r\n        time_voted,\r\n        place_voted,\r\n        place_options,\r\n        isSelectTime,\r\n        isSelectPlace,\r\n        time_result,\r\n        place_result,\r\n        status,\r\n        UID,\r\n        error_msg,\r\n        recent,\r\n        voting,\r\n        admin,\r\n        GID,\r\n        time_options,\r\n        place_options,\r\n        mess,\r\n        messages,\r\n    }\r\n}\r\nexport default useData;","\r\nimport './App.css';\r\nimport {Route,BrowserRouter,Switch} from \"react-router-dom\";\r\n\r\nimport Beforelogin from \"./pages/Beforelogin\";\r\nimport Login from \"./pages/Login\";\r\nimport Register from \"./pages/Register\";\r\nimport RenewProfile from \"./pages/RenewProfile\";\r\nimport HomePage from \"./pages/HomePage\"\r\nimport GroupPage from \"./pages/GroupPage\"\r\nimport DiscussionPage from \"./pages/DiscussionPage\"\r\nimport useData from \"./useData\"\r\nimport { message } from 'antd'\r\nimport 'antd/dist/antd.css';\r\n\r\nconst App = () =>{\r\n\r\n  const {\r\n    sendData,\r\n    code,\r\n    group,\r\n    isAdmin,\r\n    discussions,\r\n    file,\r\n    UName,\r\n    GName,\r\n    discuss_content,\r\n    subject,\r\n    time_options,\r\n    isDue,\r\n    time_voted,\r\n    place_voted,\r\n    place_options,\r\n    isSelectTime,\r\n    isSelectPlace,\r\n    time_result,\r\n    place_result,\r\n    status,\r\n    recent, \r\n    voting,\r\n    mess,\r\n    messages,\r\n\r\n  }\r\n  = useData()\r\n\r\n  const displayStatus = (payload) =>{\r\n    if(payload){\r\n      const {type, msg} = payload\r\n      const content = {\r\n        content: msg,\r\n        duration: 1.5,\r\n      }\r\n      switch(type){\r\n        case \"success\":\r\n          message.success(content)\r\n          break\r\n        case \"error\":\r\n          message.error(content)\r\n          break\r\n      }\r\n    }\r\n  }\r\n\r\n  console.log(messages)\r\n\r\n  return( \r\n    \r\n    <BrowserRouter>\r\n      <Switch>\r\n      <Route exact path=\"/\" component={Beforelogin} />\r\n        <Route exact path=\"/login\" render={()=>(<Login sendData={sendData} mess={mess}/>)} />\r\n        <Route exact path=\"/register\" render={()=>(<Register status = {status} sendData={sendData} mess={mess}/>)} />\r\n        <Route exact path=\"/index\" render={()=>(<HomePage sendData={sendData} mess={mess}/>)} />\r\n        <Route exact path=\"/renewProfile\" render={()=>(<RenewProfile sendData={sendData} mess={mess}/>)} />\r\n        <Route exact path=\"/:UID\" render={()=>(<HomePage UName={UName} group={group} sendData={sendData}/>)} />\r\n            <Route exact path=\"/:UID/:GID\" \r\n            render={()=>\r\n            (<GroupPage \r\n            UName={UName} \r\n            code={code} \r\n            GName={GName} \r\n            isAdmin={isAdmin} \r\n            file={file}\r\n            discussions={discussions} \r\n            group={group} \r\n            sendData={sendData}\r\n            displayStatus={displayStatus}\r\n            message={mess}\r\n            messages={messages}\r\n            />)} />\r\n\r\n            <Route exact path=\"/:UID/:GID/:DID\" \r\n            render={()=>\r\n              (<DiscussionPage \r\n              UName={UName}\r\n              GName={GName}\r\n              isAdmin={isAdmin} \r\n              subject={subject}\r\n              content={discuss_content}\r\n              sendData={sendData}\r\n              time_options={time_options}\r\n              isDue={isDue}\r\n              time_voted={time_voted}\r\n              place_voted={place_voted}\r\n              place_options={place_options}\r\n              isAdmin={isAdmin}\r\n              isSelectTime={isSelectTime}\r\n              isSelectPlace={isSelectPlace}\r\n              time_result={time_result}\r\n              place_result={place_result}\r\n              displayStatus={displayStatus}\r\n              message={mess}\r\n              />)} />\r\n      </Switch>\r\n    </BrowserRouter>\r\n    \r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}