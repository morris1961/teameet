{"version":3,"sources":["../src/utils.js","../src/imports-cache.js","../src/debug-utils.js","../src/normalize-options.js","../src/visitors/usage.js","../src/visitors/entry.js","../src/browser/dependencies.js","../src/meta-resolver.js","../src/index.js"],"names":["types","template","babel","result","a","v","b","Object","path","deopt","computed","scope","node","name","isIdentifier","parent","sym","resolveKey","value","obj","id","resolveId","placement","getType","t","expression","isRequire","prog","p","injectGlobalImport","cache","isScript","ast","source","injectNamedImport","hint","hoist","injectDefaultImport","constructor","storeAnonymous","key","imports","getVal","programPath","storeNamed","_injectImport","lastImport","_ensure","collection","map","_normalizeKey","sourceType","url","presetEnvSilentDebugHeader","JSON","prettifyTargets","pattern","unused","label","original","String","duplicates","Array","filter","regexp","patternToRegExp","matched","current","include","unusedInclude","exclude","unusedExclude","intersection","provider","buildUnusedError","buldDuplicatesError","missingDependencies","caller","babelApi","log","inject","all","callProvider","kind","ReferencedIdentifier","MemberExpression","object","binding","resolveSource","property","ObjectPattern","parentPath","grand","prop","BinaryExpression","ImportDeclaration","getImportSource","Program","bodyPath","getRequireSource","absoluteImports","PossibleGlobalObjects","static","instance","global","globalP","meta","has","desc","staticP","instanceP","getTargets","_getTargets","targets","providerOptions","method","methodName","options","shouldInjectPolyfill","targetsOption","targetsObj","browsers","configPath","debug","resolveOptions","getUtils","createUtilsGetter","moduleName","deps","depsCache","api","polyfillsNames","factory","console","filterPolyfills","shouldInject","isRequired","compatData","includes","excludes","debugLog","polyfillsSupport","assertDependency","version","dep","found","mapGetOr","validateIncludeExclude","utils","declare","traverse","applyMissingDependenciesDefaults","instantiateProvider","createVisitor","visitor","stringifyTargetsMultiline","pre","polyfills","providers","missingDeps","post","filename","filteredTargets","getInclusionReasons","formattedTargets","val","getDefault"],"mappings":"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","sourcesContent":["// @flow\n\nimport * as babel from \"@babel/core\";\nconst { types: t, template } = babel.default || babel;\nimport type NodePath from \"@babel/traverse\";\nimport type { Utils } from \"./types\";\nimport type ImportsCache from \"./imports-cache\";\n\nexport function intersection<T>(a: Set<T>, b: Set<T>): Set<T> {\n  const result = new Set();\n  a.forEach(v => b.has(v) && result.add(v));\n  return result;\n}\n\nexport function has(object: Object, key: string) {\n  return Object.prototype.hasOwnProperty.call(object, key);\n}\n\nfunction getType(target: any): string {\n  return Object.prototype.toString.call(target).slice(8, -1);\n}\n\nfunction resolveId(path) {\n  if (\n    path.isIdentifier() &&\n    !path.scope.hasBinding(path.node.name, /* noGlobals */ true)\n  ) {\n    return path.node.name;\n  }\n\n  const { deopt } = path.evaluate();\n  if (deopt && deopt.isIdentifier()) {\n    return deopt.node.name;\n  }\n}\n\nexport function resolveKey(path: NodePath, computed: boolean = false) {\n  const { node, parent, scope } = path;\n  if (path.isStringLiteral()) return node.value;\n  const { name } = node;\n  const isIdentifier = path.isIdentifier();\n  if (isIdentifier && !(computed || parent.computed)) return name;\n\n  if (\n    computed &&\n    path.isMemberExpression() &&\n    path.get(\"object\").isIdentifier({ name: \"Symbol\" }) &&\n    !scope.hasBinding(\"Symbol\", /* noGlobals */ true)\n  ) {\n    const sym = resolveKey(path.get(\"property\"), path.node.computed);\n    if (sym) return \"Symbol.\" + sym;\n  }\n\n  if (!isIdentifier || scope.hasBinding(name, /* noGlobals */ true)) {\n    const { value } = path.evaluate();\n    if (typeof value === \"string\") return value;\n  }\n}\n\nexport function resolveSource(obj: NodePath) {\n  if (\n    obj.isMemberExpression() &&\n    obj.get(\"property\").isIdentifier({ name: \"prototype\" })\n  ) {\n    const id = resolveId(obj.get(\"object\"));\n\n    if (id) {\n      return { id, placement: \"prototype\" };\n    }\n    return { id: null, placement: null };\n  }\n\n  const id = resolveId(obj);\n  if (id) {\n    return { id, placement: \"static\" };\n  }\n\n  const { value } = obj.evaluate();\n  if (value !== undefined) {\n    return { id: getType(value), placement: \"prototype\" };\n  } else if (obj.isRegExpLiteral()) {\n    return { id: \"RegExp\", placement: \"prototype\" };\n  } else if (obj.isFunction()) {\n    return { id: \"Function\", placement: \"prototype\" };\n  }\n\n  return { id: null, placement: null };\n}\n\nexport function getImportSource({ node }: NodePath) {\n  if (node.specifiers.length === 0) return node.source.value;\n}\n\nexport function getRequireSource({ node }: NodePath) {\n  if (!t.isExpressionStatement(node)) return;\n  const { expression } = node;\n  const isRequire =\n    t.isCallExpression(expression) &&\n    t.isIdentifier(expression.callee) &&\n    expression.callee.name === \"require\" &&\n    expression.arguments.length === 1 &&\n    t.isStringLiteral(expression.arguments[0]);\n  if (isRequire) return expression.arguments[0].value;\n}\n\nfunction hoist(node: t.Node) {\n  node._blockHoist = 3;\n  return node;\n}\n\nexport function createUtilsGetter(cache: ImportsCache) {\n  return (path: NodePath): Utils => {\n    const prog = path.findParent(p => p.isProgram());\n\n    return {\n      injectGlobalImport(url) {\n        cache.storeAnonymous(prog, url, (isScript, source) => {\n          return isScript\n            ? template.statement.ast`require(${source})`\n            : t.importDeclaration([], source);\n        });\n      },\n      injectNamedImport(url, name, hint = name) {\n        return cache.storeNamed(prog, url, name, (isScript, source, name) => {\n          const id = prog.scope.generateUidIdentifier(hint);\n          return {\n            node: isScript\n              ? hoist(template.statement.ast`\n                  var ${id} = require(${source}).${name}\n                `)\n              : t.importDeclaration([t.importSpecifier(id, name)], source),\n            name: id.name,\n          };\n        });\n      },\n      injectDefaultImport(url, hint = url) {\n        return cache.storeNamed(prog, url, \"default\", (isScript, source) => {\n          const id = prog.scope.generateUidIdentifier(hint);\n          return {\n            node: isScript\n              ? hoist(template.statement.ast`var ${id} = require(${source})`)\n              : t.importDeclaration([t.importDefaultSpecifier(id)], source),\n            name: id.name,\n          };\n        });\n      },\n    };\n  };\n}\n","// @flow\n\nimport type { NodePath } from \"@babel/traverse\";\nimport * as babel from \"@babel/core\";\nconst { types: t } = babel.default || babel;\n\ntype StrMap<K> = Map<string, K>;\n\nexport default class ImportsCache {\n  _imports: WeakMap<NodePath, StrMap<string>>;\n  _anonymousImports: WeakMap<NodePath, Set<string>>;\n  _lastImports: WeakMap<NodePath, NodePath>;\n  _resolver: (url: string) => string;\n\n  constructor(resolver: (url: string) => string) {\n    this._imports = new WeakMap();\n    this._anonymousImports = new WeakMap();\n    this._lastImports = new WeakMap();\n    this._resolver = resolver;\n  }\n\n  storeAnonymous(\n    programPath: NodePath,\n    url: string,\n    // eslint-disable-next-line no-undef\n    getVal: (isScript: boolean, source: t.StringLiteral) => t.Node,\n  ) {\n    const key = this._normalizeKey(programPath, url);\n    const imports = this._ensure(this._anonymousImports, programPath, Set);\n\n    if (imports.has(key)) return;\n\n    const node = getVal(\n      programPath.node.sourceType === \"script\",\n      t.stringLiteral(this._resolver(url)),\n    );\n    imports.add(key);\n    this._injectImport(programPath, node);\n  }\n\n  storeNamed(\n    programPath: NodePath,\n    url: string,\n    name: string,\n    getVal: (\n      isScript: boolean,\n      // eslint-disable-next-line no-undef\n      source: t.StringLiteral,\n      // eslint-disable-next-line no-undef\n      name: t.Identifier,\n    ) => { node: t.Node, name: string },\n  ) {\n    const key = this._normalizeKey(programPath, url, name);\n    const imports = this._ensure(this._imports, programPath, Map);\n\n    if (!imports.has(key)) {\n      const { node, name: id } = getVal(\n        programPath.node.sourceType === \"script\",\n        t.stringLiteral(this._resolver(url)),\n        t.identifier(name),\n      );\n      imports.set(key, id);\n      this._injectImport(programPath, node);\n    }\n\n    return t.identifier(imports.get(key));\n  }\n\n  _injectImport(programPath: NodePath, node: t.Node) {\n    let lastImport = this._lastImports.get(programPath);\n    if (\n      lastImport &&\n      lastImport.node &&\n      // Sometimes the AST is modified and the \"last import\"\n      // we have has been replaced\n      lastImport.parent === programPath.node &&\n      lastImport.container === programPath.node.body\n    ) {\n      lastImport = lastImport.insertAfter(node);\n    } else {\n      lastImport = programPath.unshiftContainer(\"body\", node);\n    }\n    lastImport = lastImport[lastImport.length - 1];\n    this._lastImports.set(programPath, lastImport);\n\n    /*\n    let lastImport;\n\n    programPath.get(\"body\").forEach(path => {\n      if (path.isImportDeclaration()) lastImport = path;\n      if (\n        path.isExpressionStatement() &&\n        isRequireCall(path.get(\"expression\"))\n      ) {\n        lastImport = path;\n      }\n      if (\n        path.isVariableDeclaration() &&\n        path.get(\"declarations\").length === 1 &&\n        (isRequireCall(path.get(\"declarations.0.init\")) ||\n          (path.get(\"declarations.0.init\").isMemberExpression() &&\n            isRequireCall(path.get(\"declarations.0.init.object\"))))\n      ) {\n        lastImport = path;\n      }\n    });*/\n  }\n\n  _ensure<C: Map<*, *> | Set<*>>(\n    map: WeakMap<NodePath, C>,\n    programPath: NodePath,\n    Collection: Class<C>,\n  ): C {\n    let collection = map.get(programPath);\n    if (!collection) {\n      collection = new Collection();\n      map.set(programPath, collection);\n    }\n    return collection;\n  }\n\n  _normalizeKey(programPath: NodePath, url: string, name: string = \"\"): string {\n    const { sourceType } = programPath.node;\n\n    // If we rely on the imported binding (the \"name\" parameter), we also need to cache\n    // based on the sourceType. This is because the module transforms change the names\n    // of the import variables.\n    return `${name && sourceType}::${url}::${name}`;\n  }\n}\n","// @flow\n\nimport { prettifyTargets } from \"@babel/helper-compilation-targets\";\n\nimport type { Targets } from \"./types\";\n\nexport const presetEnvSilentDebugHeader =\n  \"#__secret_key__@babel/preset-env__don't_log_debug_header_and_resolved_targets\";\n\nexport function stringifyTargetsMultiline(targets: Targets): string {\n  return JSON.stringify(prettifyTargets(targets), null, 2);\n}\n\nexport function stringifyTargets(targets: Targets): string {\n  return JSON.stringify(targets)\n    .replace(/,/g, \", \")\n    .replace(/^\\{\"/, '{ \"')\n    .replace(/\"\\}$/, '\" }');\n}\n","// @flow\n\nimport { intersection } from \"./utils\";\nimport type {\n  Pattern,\n  PluginOptions,\n  MissingDependenciesOption,\n} from \"./types\";\n\nfunction patternToRegExp(pattern: Pattern): ?RegExp {\n  if (pattern instanceof RegExp) return pattern;\n\n  try {\n    return new RegExp(`^${pattern}$`);\n  } catch {\n    return null;\n  }\n}\n\nfunction buildUnusedError(label, unused) {\n  if (!unused.length) return \"\";\n  return (\n    `  - The following \"${label}\" patterns didn't match any polyfill:\\n` +\n    unused.map(original => `    ${String(original)}\\n`).join(\"\")\n  );\n}\n\nfunction buldDuplicatesError(duplicates) {\n  if (!duplicates.size) return \"\";\n  return (\n    `  - The following polyfills were matched both by \"include\" and \"exclude\" patterns:\\n` +\n    Array.from(duplicates, name => `    ${name}\\n`).join(\"\")\n  );\n}\n\nexport function validateIncludeExclude(\n  provider: string,\n  polyfills: Set<string>,\n  includePatterns: Pattern[],\n  excludePatterns: Pattern[],\n) {\n  let current;\n  const filter = pattern => {\n    const regexp = patternToRegExp(pattern);\n    if (!regexp) return false;\n\n    let matched = false;\n    for (const polyfill of polyfills) {\n      if (regexp.test(polyfill)) {\n        matched = true;\n        current.add(polyfill);\n      }\n    }\n    return !matched;\n  };\n\n  // prettier-ignore\n  const include = current = new Set<string> ();\n  const unusedInclude = Array.from(includePatterns).filter(filter);\n\n  // prettier-ignore\n  const exclude = current = new Set<string> ();\n  const unusedExclude = Array.from(excludePatterns).filter(filter);\n\n  const duplicates = intersection(include, exclude);\n\n  if (\n    duplicates.size > 0 ||\n    unusedInclude.length > 0 ||\n    unusedExclude.length > 0\n  ) {\n    throw new Error(\n      `Error while validating the \"${provider}\" provider options:\\n` +\n        buildUnusedError(\"include\", unusedInclude) +\n        buildUnusedError(\"exclude\", unusedExclude) +\n        buldDuplicatesError(duplicates),\n    );\n  }\n\n  return { include, exclude };\n}\n\nexport function applyMissingDependenciesDefaults(\n  options: PluginOptions,\n  babelApi: Object,\n): MissingDependenciesOption {\n  const { missingDependencies = {} } = options;\n  if (missingDependencies === false) return false;\n\n  const caller = babelApi.caller(caller => caller?.name);\n\n  const {\n    log = \"deferred\",\n    inject = caller === \"rollup-plugin-babel\" ? \"throw\" : \"import\",\n    all = false,\n  } = missingDependencies;\n\n  return { log, inject, all };\n}\n","// @flow\n\nimport type { NodePath } from \"@babel/traverse\";\nimport type { MetaDescriptor } from \"../types\";\n\nimport { resolveKey, resolveSource } from \"../utils\";\n\nexport default (\n  callProvider: (payload: MetaDescriptor, path: NodePath) => void,\n) => {\n  function property(object, key, placement, path) {\n    return callProvider({ kind: \"property\", object, key, placement }, path);\n  }\n\n  return {\n    // Symbol(), new Promise\n    ReferencedIdentifier(path: NodePath) {\n      const {\n        node: { name },\n        scope,\n      } = path;\n      if (scope.getBindingIdentifier(name)) return;\n\n      callProvider({ kind: \"global\", name }, path);\n    },\n\n    MemberExpression(path: NodePath) {\n      const key = resolveKey(path.get(\"property\"), path.node.computed);\n      if (!key || key === \"prototype\") return;\n\n      const object = path.get(\"object\");\n      const binding = object.scope.getBinding(object.node.name);\n      if (binding && binding.path.isImportNamespaceSpecifier()) return;\n\n      const source = resolveSource(object);\n      return property(source.id, key, source.placement, path);\n    },\n\n    ObjectPattern(path: NodePath) {\n      const { parentPath, parent } = path;\n      let obj;\n\n      // const { keys, values } = Object\n      if (parentPath.isVariableDeclarator()) {\n        obj = parentPath.get(\"init\");\n        // ({ keys, values } = Object)\n      } else if (parentPath.isAssignmentExpression()) {\n        obj = parentPath.get(\"right\");\n        // !function ({ keys, values }) {...} (Object)\n        // resolution does not work after properties transform :-(\n      } else if (parentPath.isFunction()) {\n        const grand = parentPath.parentPath;\n        if (grand.isCallExpression() || grand.isNewExpression()) {\n          if (grand.node.callee === parent) {\n            obj = grand.get(\"arguments\")[path.key];\n          }\n        }\n      }\n\n      let id = null;\n      let placement = null;\n      if (obj) ({ id, placement } = resolveSource(obj));\n\n      for (const prop of path.get(\"properties\")) {\n        if (prop.isObjectProperty()) {\n          const key = resolveKey(prop.get(\"key\"));\n          if (key) property(id, key, placement, prop);\n        }\n      }\n    },\n\n    BinaryExpression(path: NodePath) {\n      if (path.node.operator !== \"in\") return;\n\n      const source = resolveSource(path.get(\"right\"));\n      const key = resolveKey(path.get(\"left\"), true);\n\n      if (!key) return;\n\n      callProvider(\n        {\n          kind: \"in\",\n          object: source.id,\n          key,\n          placement: source.placement,\n        },\n        path,\n      );\n    },\n  };\n};\n","// @flow\n\nimport type { NodePath } from \"@babel/traverse\";\nimport type { MetaDescriptor } from \"../types\";\n\nimport { getImportSource, getRequireSource } from \"../utils\";\n\nexport default (\n  callProvider: (payload: MetaDescriptor, path: NodePath) => void,\n) => ({\n  ImportDeclaration(path: NodePath) {\n    const source = getImportSource(path);\n    if (!source) return;\n    callProvider({ kind: \"import\", source }, path);\n  },\n  Program(path: NodePath) {\n    path.get(\"body\").forEach(bodyPath => {\n      const source = getRequireSource(bodyPath);\n      if (!source) return;\n      callProvider({ kind: \"import\", source }, bodyPath);\n    });\n  },\n});\n","// @flow\n\nexport function resolve(\n  dirname: string,\n  moduleName: string,\n  absoluteImports: boolean | string,\n): string {\n  if (absoluteImports === false) return moduleName;\n\n  throw new Error(\n    `\"absoluteImports\" is not supported in bundles prepared for the browser.`,\n  );\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function has(basedir: string, name: string) {\n  return true;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function logMissing(missingDeps: Set<string>) {}\n\n// eslint-disable-next-line no-unused-vars\nexport function laterLogMissing(missingDeps: Set<string>) {}\n","// @flow\n\nimport type {\n  MetaDescriptor,\n  ResolverPolyfills,\n  ResolvedPolyfill,\n} from \"./types\";\n\nimport { has } from \"./utils\";\n\ntype ResolverFn<T> = (meta: MetaDescriptor) => void | ResolvedPolyfill<T>;\n\nconst PossibleGlobalObjects = new Set<string>([\n  \"global\",\n  \"globalThis\",\n  \"self\",\n  \"window\",\n]);\n\nexport default function createMetaResolver<T>(\n  polyfills: ResolverPolyfills<T>,\n): ResolverFn<T> {\n  const { static: staticP, instance: instanceP, global: globalP } = polyfills;\n\n  return meta => {\n    if (meta.kind === \"global\" && globalP && has(globalP, meta.name)) {\n      return { kind: \"global\", desc: globalP[meta.name], name: meta.name };\n    }\n\n    if (meta.kind === \"property\" || meta.kind === \"in\") {\n      const { placement, object, key } = meta;\n\n      if (object && placement === \"static\") {\n        if (globalP && PossibleGlobalObjects.has(object) && has(globalP, key)) {\n          return { kind: \"global\", desc: globalP[key], name: key };\n        }\n\n        if (staticP && has(staticP, object) && has(staticP[object], key)) {\n          return {\n            kind: \"static\",\n            desc: staticP[object][key],\n            name: `${object}$${key}`,\n          };\n        }\n      }\n\n      if (instanceP && has(instanceP, key)) {\n        return { kind: \"instance\", desc: instanceP[key], name: `${key}` };\n      }\n    }\n  };\n}\n","// @flow\n\nimport { declare } from \"@babel/helper-plugin-utils\";\nimport type { NodePath } from \"@babel/traverse\";\n\nimport _getTargets, {\n  isRequired,\n  getInclusionReasons,\n} from \"@babel/helper-compilation-targets\";\nconst getTargets = _getTargets.default || _getTargets;\n\nimport { createUtilsGetter } from \"./utils\";\nimport ImportsCache from \"./imports-cache\";\nimport {\n  stringifyTargetsMultiline,\n  presetEnvSilentDebugHeader,\n} from \"./debug-utils\";\nimport {\n  validateIncludeExclude,\n  applyMissingDependenciesDefaults,\n} from \"./normalize-options\";\n\nimport type {\n  ProviderApi,\n  MethodString,\n  Targets,\n  MetaDescriptor,\n  PolyfillProvider,\n  PluginOptions,\n  ProviderOptions,\n} from \"./types\";\n\nimport * as v from \"./visitors\";\nimport * as deps from \"./node/dependencies\";\n\nimport createMetaResolver from \"./meta-resolver\";\n\nexport type { PolyfillProvider, MetaDescriptor, Utils, Targets } from \"./types\";\n\nfunction resolveOptions<Options>(\n  options: PluginOptions,\n  babelApi,\n): {\n  method: MethodString,\n  methodName: \"usageGlobal\" | \"entryGlobal\" | \"usagePure\",\n  targets: Targets,\n  debug: boolean,\n  shouldInjectPolyfill: ?(name: string, shouldInject: boolean) => boolean,\n  providerOptions: ProviderOptions<Options>,\n  absoluteImports: string | boolean,\n} {\n  const {\n    method,\n    targets: targetsOption,\n    ignoreBrowserslistConfig,\n    configPath,\n    debug,\n    shouldInjectPolyfill,\n    absoluteImports,\n    ...providerOptions\n  } = options;\n\n  let methodName;\n  if (method === \"usage-global\") methodName = \"usageGlobal\";\n  else if (method === \"entry-global\") methodName = \"entryGlobal\";\n  else if (method === \"usage-pure\") methodName = \"usagePure\";\n  else if (typeof method !== \"string\") {\n    throw new Error(\".method must be a string\");\n  } else {\n    throw new Error(\n      `.method must be one of \"entry-global\", \"usage-global\"` +\n        ` or \"usage-pure\" (received ${JSON.stringify(method)})`,\n    );\n  }\n\n  if (typeof shouldInjectPolyfill === \"function\") {\n    if (options.include || options.exclude) {\n      throw new Error(\n        `.include and .exclude are not supported when using the` +\n          ` .shouldInjectPolyfill function.`,\n      );\n    }\n  } else if (shouldInjectPolyfill != null) {\n    throw new Error(\n      `.shouldInjectPolyfill must be a function, or undefined` +\n        ` (received ${JSON.stringify(shouldInjectPolyfill)})`,\n    );\n  }\n\n  if (\n    absoluteImports != null &&\n    typeof absoluteImports !== \"boolean\" &&\n    typeof absoluteImports !== \"string\"\n  ) {\n    throw new Error(\n      `.absoluteImports must be a boolean, a string, or undefined` +\n        ` (received ${JSON.stringify(absoluteImports)})`,\n    );\n  }\n\n  let targets;\n\n  if (\n    // If any browserslist-related option is specified, fallback to the old\n    // behavior of not using the targets specified in the top-level options.\n    targetsOption ||\n    configPath ||\n    ignoreBrowserslistConfig\n  ) {\n    const targetsObj =\n      typeof targetsOption === \"string\" || Array.isArray(targetsOption)\n        ? { browsers: targetsOption }\n        : targetsOption;\n\n    targets = getTargets(targetsObj, {\n      ignoreBrowserslistConfig,\n      configPath,\n    });\n  } else {\n    targets = babelApi.targets();\n  }\n\n  return {\n    method,\n    methodName,\n    targets,\n    absoluteImports: absoluteImports ?? false,\n    shouldInjectPolyfill,\n    debug: !!debug,\n    providerOptions: ((providerOptions: Object): ProviderOptions<Options>),\n  };\n}\n\nfunction instantiateProvider<Options>(\n  factory: PolyfillProvider<Options>,\n  options: PluginOptions,\n  missingDependencies,\n  dirname,\n  debugLog,\n  babelApi,\n) {\n  const {\n    method,\n    methodName,\n    targets,\n    debug,\n    shouldInjectPolyfill,\n    providerOptions,\n    absoluteImports,\n  } = resolveOptions<Options>(options, babelApi);\n\n  const getUtils = createUtilsGetter(\n    new ImportsCache(moduleName =>\n      deps.resolve(dirname, moduleName, absoluteImports),\n    ),\n  );\n\n  // eslint-disable-next-line prefer-const\n  let include, exclude;\n  let polyfillsSupport;\n  let polyfillsNames;\n  let filterPolyfills;\n\n  const depsCache = new Map();\n\n  const api: ProviderApi = {\n    babel: babelApi,\n    getUtils,\n    method: options.method,\n    targets,\n    createMetaResolver,\n    shouldInjectPolyfill(name) {\n      if (polyfillsNames === undefined) {\n        throw new Error(\n          `Internal error in the ${factory.name} provider: ` +\n            `shouldInjectPolyfill() can't be called during initialization.`,\n        );\n      }\n      if (!polyfillsNames.has(name)) {\n        console.warn(\n          `Internal error in the ${provider.name} provider: ` +\n            `unknown polyfill \"${name}\".`,\n        );\n      }\n\n      if (filterPolyfills && !filterPolyfills(name)) return false;\n\n      let shouldInject = isRequired(name, targets, {\n        compatData: polyfillsSupport,\n        includes: include,\n        excludes: exclude,\n      });\n\n      if (shouldInjectPolyfill) {\n        shouldInject = shouldInjectPolyfill(name, shouldInject);\n        if (typeof shouldInject !== \"boolean\") {\n          throw new Error(`.shouldInjectPolyfill must return a boolean.`);\n        }\n      }\n\n      return shouldInject;\n    },\n    debug(name) {\n      debugLog().found = true;\n\n      if (!debug || !name) return;\n\n      if (debugLog().polyfills.has(provider.name)) return;\n      debugLog().polyfills.set(\n        name,\n        polyfillsSupport && name && polyfillsSupport[name],\n      );\n    },\n    assertDependency(name, version = \"*\") {\n      if (missingDependencies === false) return;\n      if (absoluteImports) {\n        // If absoluteImports is not false, we will try resolving\n        // the dependency and throw if it's not possible. We can\n        // skip the check here.\n        return;\n      }\n\n      const dep = version === \"*\" ? name : `${name}@^${version}`;\n\n      const found = missingDependencies.all\n        ? false\n        : mapGetOr(depsCache, name, () => !deps.has(dirname, name));\n\n      if (!found) {\n        debugLog().missingDeps.add(dep);\n      }\n    },\n  };\n\n  const provider = factory(api, providerOptions, dirname);\n\n  if (typeof provider[methodName] !== \"function\") {\n    throw new Error(\n      `The \"${provider.name || factory.name}\" provider doesn't ` +\n        `support the \"${method}\" polyfilling method.`,\n    );\n  }\n\n  if (Array.isArray(provider.polyfills)) {\n    polyfillsNames = new Set(provider.polyfills);\n    filterPolyfills = provider.filterPolyfills;\n  } else if (provider.polyfills) {\n    polyfillsNames = new Set(Object.keys(provider.polyfills));\n    polyfillsSupport = provider.polyfills;\n    filterPolyfills = provider.filterPolyfills;\n  } else {\n    polyfillsNames = new Set();\n  }\n\n  ({ include, exclude } = validateIncludeExclude(\n    provider.name || factory.name,\n    polyfillsNames,\n    providerOptions.include || [],\n    providerOptions.exclude || [],\n  ));\n\n  return {\n    debug,\n    method,\n    targets,\n    provider,\n    callProvider(payload: MetaDescriptor, path: NodePath) {\n      const utils = getUtils(path);\n      // $FlowIgnore\n      provider[methodName](payload, utils, path);\n    },\n  };\n}\n\nexport default function definePolyfillProvider<Options>(\n  factory: PolyfillProvider<Options>,\n) {\n  return declare((babelApi, options: PluginOptions, dirname: string) => {\n    babelApi.assertVersion(7);\n    const { traverse } = babelApi;\n\n    let debugLog;\n\n    const missingDependencies = applyMissingDependenciesDefaults(\n      options,\n      babelApi,\n    );\n\n    const {\n      debug,\n      method,\n      targets,\n      provider,\n      callProvider,\n    } = instantiateProvider<Options>(\n      factory,\n      options,\n      missingDependencies,\n      dirname,\n      () => debugLog,\n      babelApi,\n    );\n\n    const createVisitor = method === \"entry-global\" ? v.entry : v.usage;\n\n    const visitor = provider.visitor\n      ? traverse.visitors.merge([createVisitor(callProvider), provider.visitor])\n      : createVisitor(callProvider);\n\n    if (debug && debug !== presetEnvSilentDebugHeader) {\n      console.log(`${provider.name}: \\`DEBUG\\` option`);\n      console.log(`\\nUsing targets: ${stringifyTargetsMultiline(targets)}`);\n      console.log(`\\nUsing polyfills with \\`${method}\\` method:`);\n    }\n\n    return {\n      name: \"inject-polyfills\",\n      visitor,\n\n      pre() {\n        debugLog = {\n          polyfills: new Map(),\n          found: false,\n          providers: new Set(),\n          missingDeps: new Set(),\n        };\n\n        // $FlowIgnore - Flow doesn't support optional calls\n        provider.pre?.apply(this, arguments);\n      },\n      post() {\n        // $FlowIgnore - Flow doesn't support optional calls\n        provider.post?.apply(this, arguments);\n\n        if (missingDependencies !== false) {\n          if (missingDependencies.log === \"per-file\") {\n            deps.logMissing(debugLog.missingDeps);\n          } else {\n            deps.laterLogMissing(debugLog.missingDeps);\n          }\n        }\n\n        if (!debug) return;\n\n        if (this.filename) console.log(`\\n[${this.filename}]`);\n\n        if (debugLog.polyfills.size === 0) {\n          console.log(\n            method === \"entry-global\"\n              ? debugLog.found\n                ? `Based on your targets, the ${provider.name} polyfill did not add any polyfill.`\n                : `The entry point for the ${provider.name} polyfill has not been found.`\n              : `Based on your code and targets, the ${provider.name} polyfill did not add any polyfill.`,\n          );\n\n          return;\n        }\n\n        if (method === \"entry-global\") {\n          console.log(\n            `The ${provider.name} polyfill entry has been replaced with ` +\n              `the following polyfills:`,\n          );\n        } else {\n          console.log(\n            `The ${provider.name} polyfill added the following polyfills:`,\n          );\n        }\n\n        for (const [name, support] of debugLog.polyfills) {\n          if (support) {\n            const filteredTargets = getInclusionReasons(name, targets, support);\n\n            const formattedTargets = JSON.stringify(filteredTargets)\n              .replace(/,/g, \", \")\n              .replace(/^\\{\"/, '{ \"')\n              .replace(/\"\\}$/, '\" }');\n\n            console.log(`  ${name} ${formattedTargets}`);\n          } else {\n            console.log(`  ${name}`);\n          }\n        }\n      },\n    };\n  });\n}\n\nfunction mapGetOr(map, key, getDefault) {\n  let val = map.get(key);\n  if (val === undefined) {\n    val = getDefault();\n    map.set(key, val);\n  }\n  return val;\n}\n"],"file":"index.browser.js"}