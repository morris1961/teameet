{"version":3,"sources":["../../backend/models/discussion.js"],"names":["Schema","mongoose","DiscussionSchema","admin","type","Types","ObjectId","required","ref","subject","String","time_start","Date","time_end","time_span","Number","time_options","Map","of","deadline","time_result","place_options","place_result","content","Discussion","model"],"mappings":";;;;;;;AAAA;;;;AACA,IAAMA,MAAM,GAAGC,qBAASD,MAAxB;AAEA,IAAME,gBAAgB,GAAG,IAAIF,MAAJ,CAAW;AAClCG,EAAAA,KAAK,EAAE;AACLC,IAAAA,IAAI,EAAEH,qBAASI,KAAT,CAAeC,QADhB;AAELC,IAAAA,QAAQ,EAAE,IAFL;AAGLC,IAAAA,GAAG,EAAE;AAHA,GAD2B;AAMlCC,EAAAA,OAAO,EAAC;AACNL,IAAAA,IAAI,EAAEM,MADA;AAENH,IAAAA,QAAQ,EAAE;AAFJ,GAN0B;AAUlCI,EAAAA,UAAU,EAAC;AACTP,IAAAA,IAAI,EAAEQ,IADG;AAETL,IAAAA,QAAQ,EAAE;AAFD,GAVuB;AAclCM,EAAAA,QAAQ,EAAC;AACPT,IAAAA,IAAI,EAAEQ,IADC;AAEPL,IAAAA,QAAQ,EAAE;AAFH,GAdyB;AAkBlCO,EAAAA,SAAS,EAAC;AACRV,IAAAA,IAAI,EAAEW,MADE;AAER,YAAM,CAAC,EAAD,EAAK,EAAL,EAAS,GAAT,CAFE;AAGR,eAAS;AAHD,GAlBwB;AAuBlCC,EAAAA,YAAY,EAAC;AACXZ,IAAAA,IAAI,EAAEa,GADK;AAEXC,IAAAA,EAAE,EAAE,CAAC;AAACd,MAAAA,IAAI,EAAEH,qBAASI,KAAT,CAAeC,QAAtB;AAAgCE,MAAAA,GAAG,EAAC;AAApC,KAAD,CAFO;AAGX,eAAS;AAHE,GAvBqB;AA4BlCW,EAAAA,QAAQ,EAAC;AACPf,IAAAA,IAAI,EAAEQ,IADC;AAEPL,IAAAA,QAAQ,EAAE;AAFH,GA5ByB;AAgClCa,EAAAA,WAAW,EAAC;AACVhB,IAAAA,IAAI,EAAEQ,IADI;AAEV,eAAQ,IAAIA,IAAJ,CAAS,CAAT,CAFE,CAEU;;AAFV,GAhCsB;AAoClCS,EAAAA,aAAa,EAAC;AACZjB,IAAAA,IAAI,EAAEa,GADM;AAEZC,IAAAA,EAAE,EAAE,CAAC;AAACd,MAAAA,IAAI,EAAEH,qBAASI,KAAT,CAAeC,QAAtB;AAAgCE,MAAAA,GAAG,EAAC;AAApC,KAAD,CAFQ;AAGZ,eAAS;AAHG,GApCoB;AAyClCc,EAAAA,YAAY,EAAC;AACXlB,IAAAA,IAAI,EAACM,MADM;AAEX,eAAQ;AAFG,GAzCqB;AA6ClCa,EAAAA,OAAO,EAAC;AACNnB,IAAAA,IAAI,EAACM,MADC;AAEN,eAAS;AAFH,GA7C0B,CAkDlC;AAEA;AAEA;AAEA;;AAxDkC,CAAX,CAAzB,C,CA2DA;;AACA,IAAMc,UAAU,GAAGvB,qBAASwB,KAAT,CAAe,YAAf,EAA6BvB,gBAA7B,CAAnB,C,CAEA;;;eACesB,U","sourcesContent":["import mongoose from 'mongoose';\r\nconst Schema = mongoose.Schema;\r\n\r\nconst DiscussionSchema = new Schema({\r\n  admin: {\r\n    type: mongoose.Types.ObjectId,\r\n    required: true,\r\n    ref: 'User'\r\n  },\r\n  subject:{ \r\n    type: String,\r\n    required: true,\r\n  },\r\n  time_start:{\r\n    type: Date,\r\n    required: true,\r\n  },\r\n  time_end:{\r\n    type: Date,\r\n    required: true,\r\n  },\r\n  time_span:{\r\n    type: Number,\r\n    enum: [30, 60, 120],\r\n    default: 60,\r\n  },\r\n  time_options:{\r\n    type: Map,\r\n    of: [{type: mongoose.Types.ObjectId, ref:\"User\"}],\r\n    default: {},\r\n  },\r\n  deadline:{\r\n    type: Date,\r\n    required: true,\r\n  },\r\n  time_result:{\r\n    type: Date,\r\n    default:new Date(0) //Thu Jan 01 1970 08:00:00 GMT+0800 (GMT+08:00)\r\n  },\r\n  place_options:{\r\n    type: Map,\r\n    of: [{type: mongoose.Types.ObjectId, ref:\"User\"}],\r\n    default: {},\r\n  },\r\n  place_result:{\r\n    type:String,\r\n    default:\"\",\r\n  },\r\n  content:{\r\n    type:String,\r\n    default: \"\",\r\n  },\r\n\r\n  // time_voted:\r\n\r\n  // default: []\r\n\r\n  // place_voted:\r\n\r\n  // default: []\r\n})\r\n\r\n// Creating a table within database with the defined schema\r\nconst Discussion = mongoose.model('Discussion', DiscussionSchema)\r\n\r\n// Exporting table for querying and mutating\r\nexport default Discussion;"],"file":"discussion.js"}