{"version":3,"sources":["../../backend/functions/confirmPlace.js"],"names":["confirmPlace","UID","DID","place_result","status","error_msg","Discussion","findById","discussion","admin","toString","Date","getTime","deadline","isIn","place_options","key","value","updateOne","$set","console","log"],"mappings":";;;;;;;AACA;;;;;;;;;;;;;;;;;;;;;;AAEA;SACeA,Y;;;;;0EAAf;AAAA;;AAAA;AAAA;AAAA;AAAA;AAA8BC,YAAAA,GAA9B,QAA8BA,GAA9B,EAAmCC,GAAnC,QAAmCA,GAAnC,EAAwCC,YAAxC,QAAwCA,YAAxC;AACMC,YAAAA,MADN,GACe,KADf;AAEMC,YAAAA,SAFN,GAEkB,oBAFlB;AAAA;AAAA;AAAA,mBAI6BC,uBAAWC,QAAX,CAAoBL,GAApB,CAJ7B;;AAAA;AAIUM,YAAAA,UAJV;;AAAA,gBAKSA,UALT;AAAA;AAAA;AAAA;;AAMMJ,YAAAA,MAAM,GAAG,KAAT;AACAC,YAAAA,SAAS,GAAG,8BAAZ;AAPN,6CAQa;AAAED,cAAAA,MAAM,EAANA,MAAF;AAAUC,cAAAA,SAAS,EAATA;AAAV,aARb;;AAAA;AAAA,kBAUQG,UAAU,CAACC,KAAX,CAAiBC,QAAjB,OAAgCT,GAAG,CAACS,QAAJ,EAVxC;AAAA;AAAA;AAAA;;AAWMN,YAAAA,MAAM,GAAG,KAAT;AACAC,YAAAA,SAAS,GAAG,wBAAZ;AAZN,6CAaa;AAAED,cAAAA,MAAM,EAANA,MAAF;AAAUC,cAAAA,SAAS,EAATA;AAAV,aAbb;;AAAA;AAAA,kBAeS,IAAIM,IAAJ,GAAWC,OAAX,KAAuBJ,UAAU,CAACK,QAAX,CAAoBD,OAApB,EAAxB,GAAyD,CAfjE;AAAA;AAAA;AAAA;;AAgBMR,YAAAA,MAAM,GAAG,KAAT;AACAC,YAAAA,SAAS,GAAG,+BAAZ;AAjBN,6CAkBa;AAAED,cAAAA,MAAM,EAANA,MAAF;AAAUC,cAAAA,SAAS,EAATA;AAAV,aAlBb;;AAAA;AAoBQS,YAAAA,IApBR,GAoBe,KApBf;AAAA,mDAqB6BN,UAAU,CAACO,aArBxC;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,0DAqBcC,GArBd,mBAqBmBC,KArBnB;;AAAA,kBAsBUD,GAAG,KAAKb,YAtBlB;AAAA;AAAA;AAAA;;AAuBQW,YAAAA,IAAI,GAAG,IAAP;AAvBR;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA,gBA2BQA,IA3BR;AAAA;AAAA;AAAA;;AA4BMV,YAAAA,MAAM,GAAG,KAAT;AACAC,YAAAA,SAAS,GAAG,iCAAZ;AA7BN,6CA8Ba;AAAED,cAAAA,MAAM,EAANA,MAAF;AAAUC,cAAAA,SAAS,EAATA;AAAV,aA9Bb;;AAAA;AAAA;AAAA,mBAgCUG,UAAU,CAACU,SAAX,CAAqB;AAAEC,cAAAA,IAAI,EAAE;AAAEhB,gBAAAA,YAAY,EAAZA;AAAF;AAAR,aAArB,CAhCV;;AAAA;AAiCIC,YAAAA,MAAM,GAAG,IAAT;AACAC,YAAAA,SAAS,GAAG,YAAZ;AAlCJ;AAAA;;AAAA;AAAA;AAAA;AAoCIe,YAAAA,OAAO,CAACC,GAAR;AACAjB,YAAAA,MAAM,GAAG,KAAT;AACAC,YAAAA,SAAS,GAAG,oBAAZ;AAAiC;;AAtCrC;AAAA,6CAwCS;AAAED,cAAAA,MAAM,EAANA,MAAF;AAAUD,cAAAA,YAAY,EAAZA,YAAV;AAAwBE,cAAAA,SAAS,EAATA;AAAxB,aAxCT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;eA2CeL,Y","sourcesContent":["// import models\r\nimport Discussion from '../models/discussion.js'\r\n\r\n// function for every cases\r\nasync function confirmPlace({ UID, DID, place_result }) {\r\n  var status = false;\r\n  var error_msg = \"Something wrong...\";\r\n  try {\r\n    const discussion = await Discussion.findById(DID);\r\n    if (!discussion) {\r\n      status = false;\r\n      error_msg = \"The discussion is not valid!\"\r\n      return { status, error_msg };\r\n    }\r\n    if (discussion.admin.toString() !== UID.toString()) {\r\n      status = false;\r\n      error_msg = \"The user is not admin!\"\r\n      return { status, error_msg };\r\n    }\r\n    if ((new Date().getTime() - discussion.deadline.getTime()) < 0){\r\n      status = false;\r\n      error_msg = \"The deadline has not arrived!\"\r\n      return { status, error_msg };\r\n    }\r\n    let isIn = false;\r\n    for (var [key, value] of discussion.place_options) {\r\n      if (key === place_result) {\r\n        isIn = true;\r\n        break;\r\n      }\r\n    }\r\n    if(!isIn){\r\n      status = false;\r\n      error_msg = \"The place is not in the options\";\r\n      return { status, error_msg };\r\n    }\r\n    await discussion.updateOne({ $set: { place_result } })\r\n    status = true;\r\n    error_msg = \"Successed!\";\r\n  } catch (e) {\r\n    console.log(e)\r\n    status = false;\r\n    error_msg = \"Something wrong...\";;\r\n  }\r\n  return { status, place_result, error_msg };\r\n}\r\n\r\nexport default confirmPlace;"],"file":"confirmPlace.js"}