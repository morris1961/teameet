{"version":3,"sources":["../../backend/functions/confirmTime.js"],"names":["confirmTime","UID","DID","time_result","status","error_msg","Date","toDate","Discussion","findById","discussion","admin","toString","getTime","deadline","isIn","time_options","key","value","toISOString","replace","updateOne","$set","console","log"],"mappings":";;;;;;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;AAEA;SACeA,W;;;;;yEAAf;AAAA;;AAAA;AAAA;AAAA;AAAA;AAA6BC,YAAAA,GAA7B,QAA6BA,GAA7B,EAAkCC,GAAlC,QAAkCA,GAAlC,EAAuCC,WAAvC,QAAuCA,WAAvC;AACMC,YAAAA,MADN,GACe,KADf;AAEMC,YAAAA,SAFN,GAEkB,oBAFlB;AAGEF,YAAAA,WAAW,GAAG,IAAIG,IAAJ,CAAS,wBAAOH,WAAP,EAAoBI,MAApB,EAAT,CAAd;AAHF;AAAA;AAAA,mBAK6BC,uBAAWC,QAAX,CAAoBP,GAApB,CAL7B;;AAAA;AAKUQ,YAAAA,UALV;;AAAA,gBAMSA,UANT;AAAA;AAAA;AAAA;;AAOMN,YAAAA,MAAM,GAAG,KAAT;AACAC,YAAAA,SAAS,GAAG,8BAAZ;AARN,6CASa;AAAED,cAAAA,MAAM,EAANA,MAAF;AAAUC,cAAAA,SAAS,EAATA;AAAV,aATb;;AAAA;AAAA,kBAWOK,UAAU,CAACC,KAAX,CAAiBC,QAAjB,OAAgCX,GAAG,CAACW,QAAJ,EAXvC;AAAA;AAAA;AAAA;;AAYMR,YAAAA,MAAM,GAAG,KAAT;AACAC,YAAAA,SAAS,GAAG,wBAAZ;AAbN,6CAca;AAAED,cAAAA,MAAM,EAANA,MAAF;AAAUC,cAAAA,SAAS,EAATA;AAAV,aAdb;;AAAA;AAAA,kBAgBS,IAAIC,IAAJ,GAAWO,OAAX,KAAuBH,UAAU,CAACI,QAAX,CAAoBD,OAApB,EAAxB,GAAyD,CAhBjE;AAAA;AAAA;AAAA;;AAiBMT,YAAAA,MAAM,GAAG,KAAT;AACAC,YAAAA,SAAS,GAAG,+BAAZ;AAlBN,6CAmBa;AAAED,cAAAA,MAAM,EAANA,MAAF;AAAUC,cAAAA,SAAS,EAATA;AAAV,aAnBb;;AAAA;AAqBQU,YAAAA,IArBR,GAqBe,KArBf;AAAA,mDAsB6BL,UAAU,CAACM,YAtBxC;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,0DAsBcC,GAtBd,mBAsBmBC,KAtBnB;;AAAA,kBAuBUD,GAAG,KAAKd,WAAW,CAACgB,WAAZ,GAA0BC,OAA1B,CAAkC,GAAlC,EAAuC,GAAvC,CAvBlB;AAAA;AAAA;AAAA;;AAwBQL,YAAAA,IAAI,GAAG,IAAP;AAxBR;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA,gBA4BQA,IA5BR;AAAA;AAAA;AAAA;;AA6BMX,YAAAA,MAAM,GAAG,KAAT;AACAC,YAAAA,SAAS,GAAG,gCAAZ;AA9BN,6CA+Ba;AAAED,cAAAA,MAAM,EAANA,MAAF;AAAUC,cAAAA,SAAS,EAATA;AAAV,aA/Bb;;AAAA;AAAA;AAAA,mBAiCUK,UAAU,CAACW,SAAX,CAAqB;AAAEC,cAAAA,IAAI,EAAE;AAAEnB,gBAAAA,WAAW,EAAXA;AAAF;AAAR,aAArB,CAjCV;;AAAA;AAkCIC,YAAAA,MAAM,GAAG,IAAT;AACAC,YAAAA,SAAS,GAAG,YAAZ;AAnCJ;AAAA;;AAAA;AAAA;AAAA;AAqCIkB,YAAAA,OAAO,CAACC,GAAR;AACApB,YAAAA,MAAM,GAAG,KAAT;AACAC,YAAAA,SAAS,GAAG,oBAAZ;AAAiC;;AAvCrC;AAAA,6CAyCS;AAAED,cAAAA,MAAM,EAANA,MAAF;AAAUD,cAAAA,WAAW,EAAXA,WAAV;AAAuBE,cAAAA,SAAS,EAATA;AAAvB,aAzCT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;eA4CeL,W","sourcesContent":["// import models\r\nimport Discussion from '../models/discussion.js'\r\nimport moment from \"moment\";\r\n\r\n// function for every cases\r\nasync function confirmTime({ UID, DID, time_result }) {\r\n  var status = false;\r\n  var error_msg = \"Something wrong...\";\r\n  time_result = new Date(moment(time_result).toDate());\r\n  try {\r\n    const discussion = await Discussion.findById(DID);\r\n    if (!discussion) {\r\n      status = false;\r\n      error_msg = \"The discussion is not valid!\"\r\n      return { status, error_msg };\r\n    }\r\n    if(discussion.admin.toString() !== UID.toString()){\r\n      status = false;\r\n      error_msg = \"The user is not admin!\"\r\n      return { status, error_msg };\r\n    }\r\n    if ((new Date().getTime() - discussion.deadline.getTime()) < 0){\r\n      status = false;\r\n      error_msg = \"The deadline has not arrived!\"\r\n      return { status, error_msg };\r\n    }\r\n    let isIn = false;\r\n    for (var [key, value] of discussion.time_options) {\r\n      if (key === time_result.toISOString().replace(\".\", \" \")) {\r\n        isIn = true;\r\n        break;\r\n      }\r\n    }\r\n    if(!isIn){\r\n      status = false;\r\n      error_msg = \"The time is not in the options\";\r\n      return { status, error_msg };\r\n    }\r\n    await discussion.updateOne({ $set: { time_result } })\r\n    status = true;\r\n    error_msg = \"Successed!\";\r\n  } catch (e) {\r\n    console.log(e)\r\n    status = false;\r\n    error_msg = \"Something wrong...\";;\r\n  }\r\n  return { status, time_result, error_msg };\r\n}\r\n\r\nexport default confirmTime;"],"file":"confirmTime.js"}