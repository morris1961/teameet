{"version":3,"sources":["../../backend/functions/votePlace.js"],"names":["votePlace","UID","DID","places","status","error_msg","Discussion","findById","discussion","Date","getTime","deadline","place_options","j","length","key","value","i","get","toString","push","updateOne","$set","console","log"],"mappings":"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","sourcesContent":["// import models\r\nimport Discussion from '../models/discussion.js'\r\n\r\n// function for every cases\r\nasync function votePlace({ UID, DID, places }) {\r\n  var status = false;\r\n  var error_msg = \"Something wrong...\";\r\n  try {\r\n    const discussion = await Discussion.findById(DID);\r\n    if (!discussion) {\r\n      status = false;\r\n      error_msg = \"The discussion is not valid!\"\r\n      return { status, error_msg };\r\n    }\r\n    if ((new Date().getTime() - discussion.deadline.getTime()) >= 0){\r\n      status = false;\r\n      error_msg = \"The deadline has arrived!\"\r\n      return { status, error_msg };\r\n    }\r\n    var place_options = discussion.place_options;\r\n    for (let j = 0; j < places.length; j++) {\r\n      for (var [key, value] of place_options) {\r\n        if (key === places[j]) {\r\n          for (let i = 0; i < place_options.get(key).length; i++) {\r\n            if (UID.toString() === place_options.get(key)[i].toString()) {\r\n              status = false;\r\n              error_msg = \"The place has been voted by this user!\";\r\n              return { status, error_msg };\r\n            }\r\n          }\r\n          place_options.get(key).push(UID);\r\n        }\r\n      }\r\n    }\r\n    await discussion.updateOne({ $set: { place_options } })\r\n    status = true;\r\n    error_msg = \"Successed!\";\r\n  } catch (e) {\r\n    console.log(e)\r\n    status = false;\r\n    error_msg = \"Something wrong...\";;\r\n  }\r\n  return { status, place_options, error_msg };\r\n}\r\n\r\nexport default votePlace;"],"file":"votePlace.js"}