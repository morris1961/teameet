{"version":3,"sources":["../../backend/functions/joinGroup.js"],"names":["joinGroup","UID","code","status","GID","GName","error_msg","Group","findOne","group","User","findById","user","groups","i","length","toString","_id","aGroup","push","updateOne","$set","console","log"],"mappings":"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","sourcesContent":["// import models\r\nimport Group from '../models/group.js';\r\nimport User from '../models/user.js';\r\n\r\n// function for every cases\r\nasync function joinGroup({ UID, code }) {\r\n  var status = false;\r\n  var GID = \"\";\r\n  var GName = [];\r\n  var error_msg = \"Something wrong...\";\r\n  try {\r\n    const group = await Group.findOne({ code });\r\n    if (!group) {\r\n      status = false;\r\n      error_msg = \"The code is not valid!\"\r\n      return { status, error_msg };\r\n    }\r\n    const user = await User.findById(UID);\r\n    if (!user) {\r\n      status = false;\r\n      error_msg = \"The user is not valid!\"\r\n      return { status, error_msg };\r\n    }\r\n    var groups = user.groups;\r\n    for (let i = 0; i < groups.length; i++) {\r\n      if (groups[i].toString() === group._id.toString()) {\r\n        status = false;\r\n        error_msg = \"The user has been in the group!\"\r\n        return { status, error_msg };\r\n      }\r\n      const aGroup = await Group.findById(groups[i]);\r\n      GName.push(aGroup.GName);\r\n    }\r\n    groups.push(group._id);\r\n    await User.updateOne({ _id: UID }, { $set: { groups } });\r\n    const aGroup = await Group.findById(group._id);\r\n    GName.push(aGroup.GName);\r\n    status = true;\r\n    error_msg = \"Successed!\";\r\n  } catch (e) {\r\n    console.log(e)\r\n    status = false;\r\n    error_msg = \"Something wrong...\";;\r\n  }\r\n  return { status, GID, GName, error_msg };\r\n}\r\n\r\nexport default joinGroup;"],"file":"joinGroup.js"}